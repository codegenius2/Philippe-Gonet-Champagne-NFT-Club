{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a/contracts/=lib/erc721a/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":stablecoin-evm/=lib/stablecoin-evm/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc721a/contracts/=lib/erc721a/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","stablecoin-evm/=lib/stablecoin-evm/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Context.sol":"Context"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","id":47111,"exportedSymbols":{"Context":[47110]},"nodeType":"SourceUnit","src":"101:862:27","nodes":[{"id":47082,"nodeType":"PragmaDirective","src":"101:24:27","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":47110,"nodeType":"ContractDefinition","src":"624:338:27","nodes":[{"id":47092,"nodeType":"FunctionDefinition","src":"656:96:27","nodes":[],"body":{"id":47091,"nodeType":"Block","src":"718:34:27","nodes":[],"statements":[{"expression":{"expression":{"id":47088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":47089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:27","memberName":"sender","nodeType":"MemberAccess","src":"735:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":47087,"id":47090,"nodeType":"Return","src":"728:17:27"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:27","parameters":{"id":47084,"nodeType":"ParameterList","parameters":[],"src":"675:2:27"},"returnParameters":{"id":47087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47092,"src":"709:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47085,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:27"},"scope":47110,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":47101,"nodeType":"FunctionDefinition","src":"758:99:27","nodes":[],"body":{"id":47100,"nodeType":"Block","src":"825:32:27","nodes":[],"statements":[{"expression":{"expression":{"id":47097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":47098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:27","memberName":"data","nodeType":"MemberAccess","src":"842:8:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":47096,"id":47099,"nodeType":"Return","src":"835:15:27"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:27","parameters":{"id":47093,"nodeType":"ParameterList","parameters":[],"src":"775:2:27"},"returnParameters":{"id":47096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47101,"src":"809:14:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":47094,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:27"},"scope":47110,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":47109,"nodeType":"FunctionDefinition","src":"863:97:27","nodes":[],"body":{"id":47108,"nodeType":"Block","src":"935:25:27","nodes":[],"statements":[{"expression":{"hexValue":"30","id":47106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":47105,"id":47107,"nodeType":"Return","src":"945:8:27"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:27","parameters":{"id":47102,"nodeType":"ParameterList","parameters":[],"src":"892:2:27"},"returnParameters":{"id":47105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47109,"src":"926:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47103,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:27"},"scope":47110,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":47083,"nodeType":"StructuredDocumentation","src":"127:496:27","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[47110],"name":"Context","nameLocation":"642:7:27","scope":47111,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":27}