{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "_name", "type": "string", "internalType": "string" },
        { "name": "_symbol", "type": "string", "internalType": "string" },
        { "name": "_uri", "type": "string", "internalType": "string" },
        { "name": "_maxWallet", "type": "uint8", "internalType": "uint8" },
        { "name": "_maxSupply", "type": "uint256", "internalType": "uint256" },
        { "name": "_price", "type": "uint256", "internalType": "uint256" },
        { "name": "_usdcAddress", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "explicitOwnershipOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IERC721A.TokenOwnership",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "startTimestamp",
              "type": "uint64",
              "internalType": "uint64"
            },
            { "name": "burned", "type": "bool", "internalType": "bool" },
            { "name": "extraData", "type": "uint24", "internalType": "uint24" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "explicitOwnershipsOf",
      "inputs": [
        { "name": "tokenIds", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IERC721A.TokenOwnership[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            {
              "name": "startTimestamp",
              "type": "uint64",
              "internalType": "uint64"
            },
            { "name": "burned", "type": "bool", "internalType": "bool" },
            { "name": "extraData", "type": "uint24", "internalType": "uint24" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentMaxSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentPrice",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "_to", "type": "address", "internalType": "address" },
        { "name": "_quantity", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mintPartnership",
      "inputs": [
        { "name": "_quantity", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "_data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxSupply",
      "inputs": [
        {
          "name": "_newMaxSupply",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPrice",
      "inputs": [
        { "name": "_newPrice", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setUri",
      "inputs": [
        { "name": "_newUri", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokensOfOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokensOfOwnerIn",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "start", "type": "uint256", "internalType": "uint256" },
        { "name": "stop", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClubCPG__Mint",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalPrice",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "quantity",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "currentIndex",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClubCPG__SetNewMaxSupply",
      "inputs": [
        {
          "name": "newMaxSupply",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClubCPG__SetNewPrice",
      "inputs": [
        {
          "name": "newPrice",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClubCPG__SetNewUri",
      "inputs": [
        {
          "name": "newUri",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ConsecutiveTransfer",
      "inputs": [
        {
          "name": "fromTokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "toTokenId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ApprovalCallerNotOwnerNorApproved",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ApprovalQueryForNonexistentToken",
      "inputs": []
    },
    { "type": "error", "name": "BalanceQueryForZeroAddress", "inputs": [] },
    {
      "type": "error",
      "name": "ClubCPG__CannotComputeTotalPrice",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__CannotSetMaxSupplyBelowCurrentNumberOfNftMinted",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__CannotSetMaxSupplyToSameAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__CannotSetPriceToSamePrice",
      "inputs": []
    },
    { "type": "error", "name": "ClubCPG__CannotSetUriToSameUri", "inputs": [] },
    {
      "type": "error",
      "name": "ClubCPG__CannotTransferUsdcToContract",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__CannotTransferUsdcToReceiptAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__MaxNftMintedReachedForReceiptAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__MaxNftReachedForReceiptAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__MaxPartnershipMintReachedOrTooMuchNftsAsked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClubCPG__MaxSupplyReachedOrTooMuchNftsAsked",
      "inputs": []
    },
    { "type": "error", "name": "ClubCPG__NotEnoughUSDCAllowed", "inputs": [] },
    {
      "type": "error",
      "name": "ClubCPG__NotEnoughUSDCInBalance",
      "inputs": []
    },
    { "type": "error", "name": "ClubCPG__ShouldBeAValidAddress", "inputs": [] },
    {
      "type": "error",
      "name": "ClubCPG__ShouldBeAValidQuantity",
      "inputs": []
    },
    { "type": "error", "name": "InvalidQueryRange", "inputs": [] },
    {
      "type": "error",
      "name": "MintERC2309QuantityExceedsLimit",
      "inputs": []
    },
    { "type": "error", "name": "MintToZeroAddress", "inputs": [] },
    { "type": "error", "name": "MintZeroQuantity", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "OwnerQueryForNonexistentToken", "inputs": [] },
    {
      "type": "error",
      "name": "OwnershipNotInitializedForExtraData",
      "inputs": []
    },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "TransferCallerNotOwnerNorApproved",
      "inputs": []
    },
    { "type": "error", "name": "TransferFromIncorrectOwner", "inputs": [] },
    {
      "type": "error",
      "name": "TransferToNonERC721ReceiverImplementer",
      "inputs": []
    },
    { "type": "error", "name": "TransferToZeroAddress", "inputs": [] },
    { "type": "error", "name": "URIQueryForNonexistentToken", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620026b2380380620026b2833981016040819052620000349162000214565b338787600262000045838262000377565b50600362000054828262000377565b506000805550506001600160a01b0381166200008a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009581620000dd565b506001600955600c620000a9868262000377565b506001600160a01b0316608052600a91909155600b55600d805460ff191660ff929092169190911790555062000443915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b8160405283815260209250866020858801011115620001bd57600080fd5b600091505b83821015620001e15785820183015181830184015290820190620001c2565b6000602085830101528094505050505092915050565b80516001600160a01b03811681146200020f57600080fd5b919050565b600080600080600080600060e0888a0312156200023057600080fd5b87516001600160401b03808211156200024857600080fd5b620002568b838c0162000145565b985060208a01519150808211156200026d57600080fd5b6200027b8b838c0162000145565b975060408a01519150808211156200029257600080fd5b50620002a18a828b0162000145565b955050606088015160ff81168114620002b957600080fd5b608089015160a08a015191955093509150620002d860c08901620001f7565b905092959891949750929550565b600181811c90821680620002fb57607f821691505b6020821081036200031c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000372576000816000526020600020601f850160051c810160208610156200034d5750805b601f850160051c820191505b818110156200036e5782815560010162000359565b5050505b505050565b81516001600160401b038111156200039357620003936200012f565b620003ab81620003a48454620002e6565b8462000322565b602080601f831160018114620003e35760008415620003ca5750858301515b600019600386901b1c1916600185901b1785556200036e565b600085815260208120601f198616915b828110156200041457888601518255948401946001909101908401620003f3565b5085821015620004335787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161223e6200047460003960008181610b1a01528181610bc301528181610cca0152610d8a015261223e6000f3fe6080604052600436106101b75760003560e01c80638462151c116100ec578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd146104c0578063e985e9c5146104e0578063eb91d37e14610529578063f2fde38b1461053e57600080fd5b8063a22cb46514610460578063b88d4fde14610480578063c23dc68f1461049357600080fd5b8063945711b2116100c6578063945711b2146103eb57806395d89b411461040b57806399a2557a146104205780639b642de11461044057600080fd5b80638462151c146103805780638da5cb5b146103ad57806391b7f5ed146103cb57600080fd5b80635bbb2177116101595780636f8b44b0116101335780636f8b44b01461031657806370a0823114610336578063715018a61461035657806383b40da21461036b57600080fd5b80635bbb2177146102a95780636352211e146102d6578063691562a0146102f657600080fd5b8063095ea7b311610195578063095ea7b31461024b57806318160ddd1461026057806323b872dd1461028357806342842e0e1461029657600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611a74565b61055e565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b506102066105b0565b6040516101e89190611ae1565b34801561021f57600080fd5b5061023361022e366004611af4565b610642565b6040516001600160a01b0390911681526020016101e8565b61025e610259366004611b29565b610686565b005b34801561026c57600080fd5b50600154600054035b6040519081526020016101e8565b61025e610291366004611b53565b610726565b61025e6102a4366004611b53565b6108cc565b3480156102b557600080fd5b506102c96102c4366004611b8f565b6108ec565b6040516101e89190611c41565b3480156102e257600080fd5b506102336102f1366004611af4565b6109b8565b34801561030257600080fd5b5061025e610311366004611c94565b6109c3565b34801561032257600080fd5b5061025e610331366004611af4565b610e91565b34801561034257600080fd5b50610275610351366004611cc7565b610f11565b34801561036257600080fd5b5061025e610f60565b34801561037757600080fd5b50600a54610275565b34801561038c57600080fd5b506103a061039b366004611cc7565b610f74565b6040516101e89190611ce2565b3480156103b957600080fd5b506008546001600160a01b0316610233565b3480156103d757600080fd5b5061025e6103e6366004611af4565b61107d565b3480156103f757600080fd5b5061025e610406366004611d1a565b6110da565b34801561041757600080fd5b506102066111f3565b34801561042c57600080fd5b506103a061043b366004611d35565b611202565b34801561044c57600080fd5b5061025e61045b366004611df4565b61137c565b34801561046c57600080fd5b5061025e61047b366004611e4b565b611438565b61025e61048e366004611e82565b6114a4565b34801561049f57600080fd5b506104b36104ae366004611af4565b6114ee565b6040516101e89190611efe565b3480156104cc57600080fd5b506102066104db366004611af4565b611566565b3480156104ec57600080fd5b506101dc6104fb366004611f0c565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561053557600080fd5b50600b54610275565b34801561054a57600080fd5b5061025e610559366004611cc7565b6115b6565b60006301ffc9a760e01b6001600160e01b03198316148061058f57506380ac58cd60e01b6001600160e01b03198316145b806105aa5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546105bf90611f36565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb90611f36565b80156106385780601f1061060d57610100808354040283529160200191610638565b820191906000526020600020905b81548152906001019060200180831161061b57829003601f168201915b5050505050905090565b600061064d826115f9565b61066a576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610691826109b8565b9050336001600160a01b038216146106ca576106ad81336104fb565b6106ca576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061073182611620565b9050836001600160a01b0316816001600160a01b0316146107645760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176107b15761079486336104fb565b6107b157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166107d857604051633a954ecd60e21b815260040160405180910390fd5b6107e58686866001611687565b80156107f057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610882576001840160008181526004602052604081205490036108805760005481146108805760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6108e7838383604051806020016040528060008152506114a4565b505050565b60608160008167ffffffffffffffff81111561090a5761090a611d68565b60405190808252806020026020018201604052801561095c57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816109285790505b50905060005b8281146109af5761098a86868381811061097e5761097e611f70565b905060200201356114ee565b82828151811061099c5761099c611f70565b6020908102919091010152600101610962565b50949350505050565b60006105aa82611620565b6109cb6116bf565b6001600160a01b0382166109f257604051635a95766d60e11b815260040160405180910390fd5b61deac196001600160a01b03831601610a1e57604051635a95766d60e11b815260040160405180910390fd5b8060ff16600003610a425760405163bf0104e760e01b815260040160405180910390fd5b600a54600054610a559060ff8416611f9c565b1115610a7457604051636d1484c760e01b815260040160405180910390fd5b600d546001600160a01b0383166000908152600e602052604090205460ff91821691610aa1911683611faf565b60ff161115610ac35760405163094e449b60e41b815260040160405180910390fd5b600080610ad5600b548460ff166116e9565b9092509050811515600003610afd5760405163024b5c1360e21b815260040160405180910390fd5b604051636eb1769f60e11b815233600482015230602482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611fc8565b1015610bac576040516367f4da7760e01b815260040160405180910390fd5b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c369190611fc8565b1015610c5557604051630ce8353160e01b815260040160405180910390fd5b6001600160a01b0384166000908152600e602052604081208054859290610c8090849060ff16611faf565b825460ff9182166101009390930a9283029190920219909116179055506040516323b872dd60e01b8152336004820152306024820152604481018290526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190611fe1565b905080610d5757604051632c6e400b60e21b815260040160405180910390fd5b60405163a9059cbb60e01b8152736eaab9aea2564ed104bca59a134eefa71b14dc196004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190611fe1565b905080610e1f576040516306001ad360e11b815260040160405180910390fd5b610e2c868660ff16611734565b826001600160a01b038716337f53252ee3279c2392363c0838074d9eac3bfd6f8bc86560c9b25faf98de03da8388610e6360005490565b6040805160ff909316835260208301919091520160405180910390a450505050610e8d6001600955565b5050565b610e9961183f565b600054811015610ebc576040516313a36cff60e11b815260040160405180910390fd5b600a548103610ede576040516307b39e1f60e21b815260040160405180910390fd5b600a81905560405181907fe1907e79e796a8fb2f932cc56e08d9194b6bc6468bdc2877e81bfde87855ba8390600090a250565b60006001600160a01b038216610f3a576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610f6861183f565b610f72600061186c565b565b60606000806000610f8485610f11565b905060008167ffffffffffffffff811115610fa157610fa1611d68565b604051908082528060200260200182016040528015610fca578160200160208202803683370190505b509050610ff760408051608081018252600080825260208201819052918101829052606081019190915290565b60005b8386146110715761100a816118be565b915081604001516110695781516001600160a01b03161561102a57815194505b876001600160a01b0316856001600160a01b031603611069578083878060010198508151811061105c5761105c611f70565b6020026020010181815250505b600101610ffa565b50909695505050505050565b61108561183f565b600b5481036110a757604051635cfa9a7960e11b815260040160405180910390fd5b600b81905560405181907fa0836faf799a35ee9837342465e84299b0f0ac68606126528e07ac3dbf68063d90600090a250565b6110e261183f565b600a546000546110f59060ff8416611f9c565b111561111457604051636d1484c760e01b815260040160405180910390fd5b600d5460059061112d908390610100900460ff16611faf565b60ff16111561114f5760405163620e2dad60e11b815260040160405180910390fd5b600d805460ff6101008083048216850182160261ff00199092169190911790915561119190739bb91139461f877fa36367c10bbab0aace02fa33908316611734565b6000739bb91139461f877fa36367c10bbab0aace02fa33337f53252ee3279c2392363c0838074d9eac3bfd6f8bc86560c9b25faf98de03da83846111d460005490565b6040805160ff909316835260208301919091520160405180910390a450565b6060600380546105bf90611f36565b606081831061122457604051631960ccad60e11b815260040160405180910390fd5b60008061123060005490565b90508084111561123e578093505b600061124987610f11565b9050848610156112685785850381811015611262578091505b5061126c565b5060005b60008167ffffffffffffffff81111561128757611287611d68565b6040519080825280602002602001820160405280156112b0578160200160208202803683370190505b509050816000036112c657935061137592505050565b60006112d1886114ee565b9050600081604001516112e2575080515b885b8881141580156112f45750848714155b1561136957611302816118be565b925082604001516113615782516001600160a01b03161561132257825191505b8a6001600160a01b0316826001600160a01b031603611361578084888060010199508151811061135457611354611f70565b6020026020010181815250505b6001016112e4565b50505092835250909150505b9392505050565b61138461183f565b600c6040516020016113969190611ffe565b60405160208183030381529060405280519060200120816040516020016113bd9190612074565b60405160208183030381529060405280519060200120036113f15760405163bb8efbf960e01b815260040160405180910390fd5b600c6113fd82826120d8565b507fed5ac4ce213815379382ba3b91d14aba998ce2e5da855f9906831dc1824757e38160405161142d9190611ae1565b60405180910390a150565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114af848484610726565b6001600160a01b0383163b156114e8576114cb848484846118fa565b6114e8576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60408051608080820183526000808352602080840182905283850182905260608085018390528551938401865282845290830182905293820181905292810183905290915060005483106115425792915050565b61154b836118be565b905080604001511561155d5792915050565b611375836119e6565b6060611571826115f9565b61158e57604051630a14c4b560e41b815260040160405180910390fd5b600c6040516020016115a09190611ffe565b6040516020818303038152906040529050919050565b6115be61183f565b6001600160a01b0381166115ed57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6115f68161186c565b50565b60008054821080156105aa575050600090815260046020526040902054600160e01b161590565b60008160005481101561166e5760008181526004602052604081205490600160e01b8216900361166c575b8060000361137557506000190160008181526004602052604090205461164b565b505b604051636f96cda160e11b815260040160405180910390fd5b600d5460ff1661169684610f11565b6116a09083611f9c565b11156114e857604051638d9ecaad60e01b815260040160405180910390fd5b6002600954036116e257604051633ee5aeb560e01b815260040160405180910390fd5b6002600955565b60008083600003611700575060019050600061172d565b8383028385828161171357611713612198565b041461172657600080925092505061172d565b6001925090505b9250929050565b60008054908290036117595760405163b562e8dd60e01b815260040160405180910390fd5b6117666000848385611687565b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461181557808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016117dd565b508160000361183657604051622e076360e81b815260040160405180910390fd5b60005550505050565b6008546001600160a01b03163314610f725760405163118cdaa760e01b81523360048201526024016115e4565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600460205260409020546105aa90611a16565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061192f9033908990889088906004016121ae565b6020604051808303816000875af192505050801561196a575060408051601f3d908101601f19168201909252611967918101906121eb565b60015b6119c8573d808015611998576040519150601f19603f3d011682016040523d82523d6000602084013e61199d565b606091505b5080516000036119c0576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6040805160808101825260008082526020820181905291810182905260608101919091526105aa611a1683611620565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6001600160e01b0319811681146115f657600080fd5b600060208284031215611a8657600080fd5b813561137581611a5e565b60005b83811015611aac578181015183820152602001611a94565b50506000910152565b60008151808452611acd816020860160208601611a91565b601f01601f19169290920160200192915050565b6020815260006113756020830184611ab5565b600060208284031215611b0657600080fd5b5035919050565b80356001600160a01b0381168114611b2457600080fd5b919050565b60008060408385031215611b3c57600080fd5b611b4583611b0d565b946020939093013593505050565b600080600060608486031215611b6857600080fd5b611b7184611b0d565b9250611b7f60208501611b0d565b9150604084013590509250925092565b60008060208385031215611ba257600080fd5b823567ffffffffffffffff80821115611bba57600080fd5b818501915085601f830112611bce57600080fd5b813581811115611bdd57600080fd5b8660208260051b8501011115611bf257600080fd5b60209290920196919550909350505050565b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b8181101561107157611c70838551611c04565b9284019260809290920191600101611c5d565b803560ff81168114611b2457600080fd5b60008060408385031215611ca757600080fd5b611cb083611b0d565b9150611cbe60208401611c83565b90509250929050565b600060208284031215611cd957600080fd5b61137582611b0d565b6020808252825182820181905260009190848201906040850190845b8181101561107157835183529284019291840191600101611cfe565b600060208284031215611d2c57600080fd5b61137582611c83565b600080600060608486031215611d4a57600080fd5b611d5384611b0d565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d9957611d99611d68565b604051601f8501601f19908116603f01168101908282118183101715611dc157611dc1611d68565b81604052809350858152868686011115611dda57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611e0657600080fd5b813567ffffffffffffffff811115611e1d57600080fd5b8201601f81018413611e2e57600080fd5b6119de84823560208401611d7e565b80151581146115f657600080fd5b60008060408385031215611e5e57600080fd5b611e6783611b0d565b91506020830135611e7781611e3d565b809150509250929050565b60008060008060808587031215611e9857600080fd5b611ea185611b0d565b9350611eaf60208601611b0d565b925060408501359150606085013567ffffffffffffffff811115611ed257600080fd5b8501601f81018713611ee357600080fd5b611ef287823560208401611d7e565b91505092959194509250565b608081016105aa8284611c04565b60008060408385031215611f1f57600080fd5b611f2883611b0d565b9150611cbe60208401611b0d565b600181811c90821680611f4a57607f821691505b602082108103611f6a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105aa576105aa611f86565b60ff81811683821601908111156105aa576105aa611f86565b600060208284031215611fda57600080fd5b5051919050565b600060208284031215611ff357600080fd5b815161137581611e3d565b600080835461200c81611f36565b60018281168015612024576001811461203957612068565b60ff1984168752821515830287019450612068565b8760005260208060002060005b8581101561205f5781548a820152908401908201612046565b50505082870194505b50929695505050505050565b60008251612086818460208701611a91565b9190910192915050565b601f8211156108e7576000816000526020600020601f850160051c810160208610156120b95750805b601f850160051c820191505b818110156108c4578281556001016120c5565b815167ffffffffffffffff8111156120f2576120f2611d68565b612106816121008454611f36565b84612090565b602080601f83116001811461213b57600084156121235750858301515b600019600386901b1c1916600185901b1785556108c4565b600085815260208120601f198616915b8281101561216a5788860151825594840194600190910190840161214b565b50858210156121885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121e190830184611ab5565b9695505050505050565b6000602082840312156121fd57600080fd5b815161137581611a5e56fea26469706673582212201a1012ae5321d67869f8f2dfb10e9aa463d0105e4e8b44712c8ca3b99b50003f64736f6c63430008170033",
    "sourceMap": "3667:13574:26:-:0;;;9064:427;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9310:10;9286:5;9293:7;5012:5:0;:13;9286:5:26;5012::0;:13;:::i;:::-;-1:-1:-1;5035:7:0;:17;5045:7;5035;:17;:::i;:::-;-1:-1:-1;5482:7:0;5062:13;:31;-1:-1:-1;;;;;;;1273:26:20;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:20;;1350:1;1322:31;;;5035:51:27;5008:18;;1322:31:20;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1713:1:23;1917:7;:21;9332:5:26::2;:12;9340:4:::0;9332:5;:12:::2;:::i;:::-;-1:-1:-1::0;;;;;;9354:36:26::2;;::::0;9400:11:::2;:24:::0;;;;9434:7:::2;:16:::0;9460:11:::2;:24:::0;;-1:-1:-1;;9460:24:26::2;;::::0;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;3667:13574:26;;-1:-1:-1;;3667:13574:26;2912:187:20;3004:6;;;-1:-1:-1;;;;;3020:17:20;;;-1:-1:-1;;;;;;3020:17:20;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:27;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:27;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:177::-;1074:13;;-1:-1:-1;;;;;1116:31:27;;1106:42;;1096:70;;1162:1;1159;1152:12;1096:70;995:177;;;:::o;1177:1127::-;1329:6;1337;1345;1353;1361;1369;1377;1430:3;1418:9;1409:7;1405:23;1401:33;1398:53;;;1447:1;1444;1437:12;1398:53;1474:16;;-1:-1:-1;;;;;1539:14:27;;;1536:34;;;1566:1;1563;1556:12;1536:34;1589:61;1642:7;1633:6;1622:9;1618:22;1589:61;:::i;:::-;1579:71;;1696:2;1685:9;1681:18;1675:25;1659:41;;1725:2;1715:8;1712:16;1709:36;;;1741:1;1738;1731:12;1709:36;1764:63;1819:7;1808:8;1797:9;1793:24;1764:63;:::i;:::-;1754:73;;1873:2;1862:9;1858:18;1852:25;1836:41;;1902:2;1892:8;1889:16;1886:36;;;1918:1;1915;1908:12;1886:36;;1941:63;1996:7;1985:8;1974:9;1970:24;1941:63;:::i;:::-;1931:73;;;2047:2;2036:9;2032:18;2026:25;2091:4;2084:5;2080:16;2073:5;2070:27;2060:55;;2111:1;2108;2101:12;2060:55;2179:3;2164:19;;2158:26;2224:3;2209:19;;2203:26;2134:5;;-1:-1:-1;2158:26:27;-1:-1:-1;2203:26:27;-1:-1:-1;2248:50:27;2293:3;2278:19;;2248:50;:::i;:::-;2238:60;;1177:1127;;;;;;;;;;:::o;2309:380::-;2388:1;2384:12;;;;2431;;;2452:61;;2506:4;2498:6;2494:17;2484:27;;2452:61;2559:2;2551:6;2548:14;2528:18;2525:38;2522:161;;2605:10;2600:3;2596:20;2593:1;2586:31;2640:4;2637:1;2630:15;2668:4;2665:1;2658:15;2522:161;;2309:380;;;:::o;2820:543::-;2922:2;2917:3;2914:11;2911:446;;;2958:1;2982:5;2979:1;2972:16;3026:4;3023:1;3013:18;3096:2;3084:10;3080:19;3077:1;3073:27;3067:4;3063:38;3132:4;3120:10;3117:20;3114:47;;;-1:-1:-1;3155:4:27;3114:47;3210:2;3205:3;3201:12;3198:1;3194:20;3188:4;3184:31;3174:41;;3265:82;3283:2;3276:5;3273:13;3265:82;;;3328:17;;;3309:1;3298:13;3265:82;;;3269:3;;;2911:446;2820:543;;;:::o;3539:1345::-;3659:10;;-1:-1:-1;;;;;3681:30:27;;3678:56;;;3714:18;;:::i;:::-;3743:97;3833:6;3793:38;3825:4;3819:11;3793:38;:::i;:::-;3787:4;3743:97;:::i;:::-;3895:4;;3952:2;3941:14;;3969:1;3964:663;;;;4671:1;4688:6;4685:89;;;-1:-1:-1;4740:19:27;;;4734:26;4685:89;-1:-1:-1;;3496:1:27;3492:11;;;3488:24;3484:29;3474:40;3520:1;3516:11;;;3471:57;4787:81;;3934:944;;3964:663;2767:1;2760:14;;;2804:4;2791:18;;-1:-1:-1;;4000:20:27;;;4118:236;4132:7;4129:1;4126:14;4118:236;;;4221:19;;;4215:26;4200:42;;4313:27;;;;4281:1;4269:14;;;;4148:19;;4118:236;;;4122:3;4382:6;4373:7;4370:19;4367:201;;;4443:19;;;4437:26;-1:-1:-1;;4526:1:27;4522:14;;;4538:3;4518:24;4514:37;4510:42;4495:58;4480:74;;4367:201;-1:-1:-1;;;;;4614:1:27;4598:14;;;4594:22;4581:36;;-1:-1:-1;3539:1345:27:o;4889:203::-;3667:13574:26;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101b75760003560e01c80638462151c116100ec578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd146104c0578063e985e9c5146104e0578063eb91d37e14610529578063f2fde38b1461053e57600080fd5b8063a22cb46514610460578063b88d4fde14610480578063c23dc68f1461049357600080fd5b8063945711b2116100c6578063945711b2146103eb57806395d89b411461040b57806399a2557a146104205780639b642de11461044057600080fd5b80638462151c146103805780638da5cb5b146103ad57806391b7f5ed146103cb57600080fd5b80635bbb2177116101595780636f8b44b0116101335780636f8b44b01461031657806370a0823114610336578063715018a61461035657806383b40da21461036b57600080fd5b80635bbb2177146102a95780636352211e146102d6578063691562a0146102f657600080fd5b8063095ea7b311610195578063095ea7b31461024b57806318160ddd1461026057806323b872dd1461028357806342842e0e1461029657600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611a74565b61055e565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b506102066105b0565b6040516101e89190611ae1565b34801561021f57600080fd5b5061023361022e366004611af4565b610642565b6040516001600160a01b0390911681526020016101e8565b61025e610259366004611b29565b610686565b005b34801561026c57600080fd5b50600154600054035b6040519081526020016101e8565b61025e610291366004611b53565b610726565b61025e6102a4366004611b53565b6108cc565b3480156102b557600080fd5b506102c96102c4366004611b8f565b6108ec565b6040516101e89190611c41565b3480156102e257600080fd5b506102336102f1366004611af4565b6109b8565b34801561030257600080fd5b5061025e610311366004611c94565b6109c3565b34801561032257600080fd5b5061025e610331366004611af4565b610e91565b34801561034257600080fd5b50610275610351366004611cc7565b610f11565b34801561036257600080fd5b5061025e610f60565b34801561037757600080fd5b50600a54610275565b34801561038c57600080fd5b506103a061039b366004611cc7565b610f74565b6040516101e89190611ce2565b3480156103b957600080fd5b506008546001600160a01b0316610233565b3480156103d757600080fd5b5061025e6103e6366004611af4565b61107d565b3480156103f757600080fd5b5061025e610406366004611d1a565b6110da565b34801561041757600080fd5b506102066111f3565b34801561042c57600080fd5b506103a061043b366004611d35565b611202565b34801561044c57600080fd5b5061025e61045b366004611df4565b61137c565b34801561046c57600080fd5b5061025e61047b366004611e4b565b611438565b61025e61048e366004611e82565b6114a4565b34801561049f57600080fd5b506104b36104ae366004611af4565b6114ee565b6040516101e89190611efe565b3480156104cc57600080fd5b506102066104db366004611af4565b611566565b3480156104ec57600080fd5b506101dc6104fb366004611f0c565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561053557600080fd5b50600b54610275565b34801561054a57600080fd5b5061025e610559366004611cc7565b6115b6565b60006301ffc9a760e01b6001600160e01b03198316148061058f57506380ac58cd60e01b6001600160e01b03198316145b806105aa5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546105bf90611f36565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb90611f36565b80156106385780601f1061060d57610100808354040283529160200191610638565b820191906000526020600020905b81548152906001019060200180831161061b57829003601f168201915b5050505050905090565b600061064d826115f9565b61066a576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610691826109b8565b9050336001600160a01b038216146106ca576106ad81336104fb565b6106ca576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061073182611620565b9050836001600160a01b0316816001600160a01b0316146107645760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176107b15761079486336104fb565b6107b157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166107d857604051633a954ecd60e21b815260040160405180910390fd5b6107e58686866001611687565b80156107f057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610882576001840160008181526004602052604081205490036108805760005481146108805760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6108e7838383604051806020016040528060008152506114a4565b505050565b60608160008167ffffffffffffffff81111561090a5761090a611d68565b60405190808252806020026020018201604052801561095c57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816109285790505b50905060005b8281146109af5761098a86868381811061097e5761097e611f70565b905060200201356114ee565b82828151811061099c5761099c611f70565b6020908102919091010152600101610962565b50949350505050565b60006105aa82611620565b6109cb6116bf565b6001600160a01b0382166109f257604051635a95766d60e11b815260040160405180910390fd5b61deac196001600160a01b03831601610a1e57604051635a95766d60e11b815260040160405180910390fd5b8060ff16600003610a425760405163bf0104e760e01b815260040160405180910390fd5b600a54600054610a559060ff8416611f9c565b1115610a7457604051636d1484c760e01b815260040160405180910390fd5b600d546001600160a01b0383166000908152600e602052604090205460ff91821691610aa1911683611faf565b60ff161115610ac35760405163094e449b60e41b815260040160405180910390fd5b600080610ad5600b548460ff166116e9565b9092509050811515600003610afd5760405163024b5c1360e21b815260040160405180910390fd5b604051636eb1769f60e11b815233600482015230602482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611fc8565b1015610bac576040516367f4da7760e01b815260040160405180910390fd5b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c369190611fc8565b1015610c5557604051630ce8353160e01b815260040160405180910390fd5b6001600160a01b0384166000908152600e602052604081208054859290610c8090849060ff16611faf565b825460ff9182166101009390930a9283029190920219909116179055506040516323b872dd60e01b8152336004820152306024820152604481018290526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190611fe1565b905080610d5757604051632c6e400b60e21b815260040160405180910390fd5b60405163a9059cbb60e01b8152736eaab9aea2564ed104bca59a134eefa71b14dc196004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190611fe1565b905080610e1f576040516306001ad360e11b815260040160405180910390fd5b610e2c868660ff16611734565b826001600160a01b038716337f53252ee3279c2392363c0838074d9eac3bfd6f8bc86560c9b25faf98de03da8388610e6360005490565b6040805160ff909316835260208301919091520160405180910390a450505050610e8d6001600955565b5050565b610e9961183f565b600054811015610ebc576040516313a36cff60e11b815260040160405180910390fd5b600a548103610ede576040516307b39e1f60e21b815260040160405180910390fd5b600a81905560405181907fe1907e79e796a8fb2f932cc56e08d9194b6bc6468bdc2877e81bfde87855ba8390600090a250565b60006001600160a01b038216610f3a576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610f6861183f565b610f72600061186c565b565b60606000806000610f8485610f11565b905060008167ffffffffffffffff811115610fa157610fa1611d68565b604051908082528060200260200182016040528015610fca578160200160208202803683370190505b509050610ff760408051608081018252600080825260208201819052918101829052606081019190915290565b60005b8386146110715761100a816118be565b915081604001516110695781516001600160a01b03161561102a57815194505b876001600160a01b0316856001600160a01b031603611069578083878060010198508151811061105c5761105c611f70565b6020026020010181815250505b600101610ffa565b50909695505050505050565b61108561183f565b600b5481036110a757604051635cfa9a7960e11b815260040160405180910390fd5b600b81905560405181907fa0836faf799a35ee9837342465e84299b0f0ac68606126528e07ac3dbf68063d90600090a250565b6110e261183f565b600a546000546110f59060ff8416611f9c565b111561111457604051636d1484c760e01b815260040160405180910390fd5b600d5460059061112d908390610100900460ff16611faf565b60ff16111561114f5760405163620e2dad60e11b815260040160405180910390fd5b600d805460ff6101008083048216850182160261ff00199092169190911790915561119190739bb91139461f877fa36367c10bbab0aace02fa33908316611734565b6000739bb91139461f877fa36367c10bbab0aace02fa33337f53252ee3279c2392363c0838074d9eac3bfd6f8bc86560c9b25faf98de03da83846111d460005490565b6040805160ff909316835260208301919091520160405180910390a450565b6060600380546105bf90611f36565b606081831061122457604051631960ccad60e11b815260040160405180910390fd5b60008061123060005490565b90508084111561123e578093505b600061124987610f11565b9050848610156112685785850381811015611262578091505b5061126c565b5060005b60008167ffffffffffffffff81111561128757611287611d68565b6040519080825280602002602001820160405280156112b0578160200160208202803683370190505b509050816000036112c657935061137592505050565b60006112d1886114ee565b9050600081604001516112e2575080515b885b8881141580156112f45750848714155b1561136957611302816118be565b925082604001516113615782516001600160a01b03161561132257825191505b8a6001600160a01b0316826001600160a01b031603611361578084888060010199508151811061135457611354611f70565b6020026020010181815250505b6001016112e4565b50505092835250909150505b9392505050565b61138461183f565b600c6040516020016113969190611ffe565b60405160208183030381529060405280519060200120816040516020016113bd9190612074565b60405160208183030381529060405280519060200120036113f15760405163bb8efbf960e01b815260040160405180910390fd5b600c6113fd82826120d8565b507fed5ac4ce213815379382ba3b91d14aba998ce2e5da855f9906831dc1824757e38160405161142d9190611ae1565b60405180910390a150565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114af848484610726565b6001600160a01b0383163b156114e8576114cb848484846118fa565b6114e8576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60408051608080820183526000808352602080840182905283850182905260608085018390528551938401865282845290830182905293820181905292810183905290915060005483106115425792915050565b61154b836118be565b905080604001511561155d5792915050565b611375836119e6565b6060611571826115f9565b61158e57604051630a14c4b560e41b815260040160405180910390fd5b600c6040516020016115a09190611ffe565b6040516020818303038152906040529050919050565b6115be61183f565b6001600160a01b0381166115ed57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6115f68161186c565b50565b60008054821080156105aa575050600090815260046020526040902054600160e01b161590565b60008160005481101561166e5760008181526004602052604081205490600160e01b8216900361166c575b8060000361137557506000190160008181526004602052604090205461164b565b505b604051636f96cda160e11b815260040160405180910390fd5b600d5460ff1661169684610f11565b6116a09083611f9c565b11156114e857604051638d9ecaad60e01b815260040160405180910390fd5b6002600954036116e257604051633ee5aeb560e01b815260040160405180910390fd5b6002600955565b60008083600003611700575060019050600061172d565b8383028385828161171357611713612198565b041461172657600080925092505061172d565b6001925090505b9250929050565b60008054908290036117595760405163b562e8dd60e01b815260040160405180910390fd5b6117666000848385611687565b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461181557808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016117dd565b508160000361183657604051622e076360e81b815260040160405180910390fd5b60005550505050565b6008546001600160a01b03163314610f725760405163118cdaa760e01b81523360048201526024016115e4565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600460205260409020546105aa90611a16565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061192f9033908990889088906004016121ae565b6020604051808303816000875af192505050801561196a575060408051601f3d908101601f19168201909252611967918101906121eb565b60015b6119c8573d808015611998576040519150601f19603f3d011682016040523d82523d6000602084013e61199d565b606091505b5080516000036119c0576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6040805160808101825260008082526020820181905291810182905260608101919091526105aa611a1683611620565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6001600160e01b0319811681146115f657600080fd5b600060208284031215611a8657600080fd5b813561137581611a5e565b60005b83811015611aac578181015183820152602001611a94565b50506000910152565b60008151808452611acd816020860160208601611a91565b601f01601f19169290920160200192915050565b6020815260006113756020830184611ab5565b600060208284031215611b0657600080fd5b5035919050565b80356001600160a01b0381168114611b2457600080fd5b919050565b60008060408385031215611b3c57600080fd5b611b4583611b0d565b946020939093013593505050565b600080600060608486031215611b6857600080fd5b611b7184611b0d565b9250611b7f60208501611b0d565b9150604084013590509250925092565b60008060208385031215611ba257600080fd5b823567ffffffffffffffff80821115611bba57600080fd5b818501915085601f830112611bce57600080fd5b813581811115611bdd57600080fd5b8660208260051b8501011115611bf257600080fd5b60209290920196919550909350505050565b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b8181101561107157611c70838551611c04565b9284019260809290920191600101611c5d565b803560ff81168114611b2457600080fd5b60008060408385031215611ca757600080fd5b611cb083611b0d565b9150611cbe60208401611c83565b90509250929050565b600060208284031215611cd957600080fd5b61137582611b0d565b6020808252825182820181905260009190848201906040850190845b8181101561107157835183529284019291840191600101611cfe565b600060208284031215611d2c57600080fd5b61137582611c83565b600080600060608486031215611d4a57600080fd5b611d5384611b0d565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d9957611d99611d68565b604051601f8501601f19908116603f01168101908282118183101715611dc157611dc1611d68565b81604052809350858152868686011115611dda57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611e0657600080fd5b813567ffffffffffffffff811115611e1d57600080fd5b8201601f81018413611e2e57600080fd5b6119de84823560208401611d7e565b80151581146115f657600080fd5b60008060408385031215611e5e57600080fd5b611e6783611b0d565b91506020830135611e7781611e3d565b809150509250929050565b60008060008060808587031215611e9857600080fd5b611ea185611b0d565b9350611eaf60208601611b0d565b925060408501359150606085013567ffffffffffffffff811115611ed257600080fd5b8501601f81018713611ee357600080fd5b611ef287823560208401611d7e565b91505092959194509250565b608081016105aa8284611c04565b60008060408385031215611f1f57600080fd5b611f2883611b0d565b9150611cbe60208401611b0d565b600181811c90821680611f4a57607f821691505b602082108103611f6a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105aa576105aa611f86565b60ff81811683821601908111156105aa576105aa611f86565b600060208284031215611fda57600080fd5b5051919050565b600060208284031215611ff357600080fd5b815161137581611e3d565b600080835461200c81611f36565b60018281168015612024576001811461203957612068565b60ff1984168752821515830287019450612068565b8760005260208060002060005b8581101561205f5781548a820152908401908201612046565b50505082870194505b50929695505050505050565b60008251612086818460208701611a91565b9190910192915050565b601f8211156108e7576000816000526020600020601f850160051c810160208610156120b95750805b601f850160051c820191505b818110156108c4578281556001016120c5565b815167ffffffffffffffff8111156120f2576120f2611d68565b612106816121008454611f36565b84612090565b602080601f83116001811461213b57600084156121235750858301515b600019600386901b1c1916600185901b1785556108c4565b600085815260208120601f198616915b8281101561216a5788860151825594840194600190910190840161214b565b50858210156121885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121e190830184611ab5565b9695505050505050565b6000602082840312156121fd57600080fd5b815161137581611a5e56fea26469706673582212201a1012ae5321d67869f8f2dfb10e9aa463d0105e4e8b44712c8ca3b99b50003f64736f6c63430008170033",
    "sourceMap": "3667:13574:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9155:630:0;;;;;;;;;;-1:-1:-1;9155:630:0;;;;;:::i;:::-;;:::i;:::-;;;565:14:27;;558:22;540:41;;528:2;513:18;9155:630:0;;;;;;;;10039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16360:214::-;;;;;;;;;;-1:-1:-1;16360:214:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:27;;;1679:51;;1667:2;1652:18;16360:214:0;1533:203:27;15812:398:0;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;-1:-1:-1;6164:12:0;;5955:7;6148:13;:28;5894:317;;;2324:25:27;;;2312:2;2297:18;5894:317:0;2178:177:27;19903:2764:0;;;;;;:::i;:::-;;:::i;22758:187::-;;;;;;:::i;:::-;;:::i;1641:513:2:-;;;;;;;;;;-1:-1:-1;1641:513:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11391:150:0:-;;;;;;;;;;-1:-1:-1;11391:150:0;;;;;:::i;:::-;;:::i;12390:1768:26:-;;;;;;;;;;-1:-1:-1;12390:1768:26;;;;;:::i;:::-;;:::i;11309:390::-;;;;;;;;;;-1:-1:-1;11309:390:26;;;;;:::i;:::-;;:::i;7045:230:0:-;;;;;;;;;;-1:-1:-1;7045:230:0;;;;;:::i;:::-;;:::i;2293:101:20:-;;;;;;;;;;;;;:::i;10874:98:26:-;;;;;;;;;;-1:-1:-1;10954:11:26;;10874:98;;5417:879:2;;;;;;;;;;-1:-1:-1;5417:879:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1638:85:20:-;;;;;;;;;;-1:-1:-1;1710:6:20;;-1:-1:-1;;;;;1710:6:20;1638:85;;10274:218:26;;;;;;;;;;-1:-1:-1;10274:218:26;;;;;:::i;:::-;;:::i;14508:622::-;;;;;;;;;;-1:-1:-1;14508:622:26;;;;;:::i;:::-;;:::i;10208:102:0:-;;;;;;;;;;;;;:::i;2528:2454:2:-;;;;;;;;;;-1:-1:-1;2528:2454:2;;;;;:::i;:::-;;:::i;16394:296:26:-;;;;;;;;;;-1:-1:-1;16394:296:26;;;;;:::i;:::-;;:::i;16901:231:0:-;;;;;;;;;;-1:-1:-1;16901:231:0;;;;;:::i;:::-;;:::i;23526:396::-;;;;;;:::i;:::-;;:::i;1070:418:2:-;;;;;;;;;;-1:-1:-1;1070:418:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16993:246:26:-;;;;;;;;;;-1:-1:-1;16993:246:26;;;;;:::i;:::-;;:::i;17282:162:0:-;;;;;;;;;;-1:-1:-1;17282:162:0;;;;;:::i;:::-;-1:-1:-1;;;;;17402:25:0;;;17379:4;17402:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17282:162;9861:90:26;;;;;;;;;;-1:-1:-1;9937:7:26;;9861:90;;2543:215:20;;;;;;;;;;-1:-1:-1;2543:215:20;;;;;:::i;:::-;;:::i;9155:630:0:-;9240:4;-1:-1:-1;;;;;;;;;9558:25:0;;;;:101;;-1:-1:-1;;;;;;;;;;9634:25:0;;;9558:101;:177;;;-1:-1:-1;;;;;;;;;;9710:25:0;;;9558:177;9539:196;9155:630;-1:-1:-1;;9155:630:0:o;10039:98::-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;-1:-1:-1;;;16485:34:0;;;;;;;;;;;16455:64;-1:-1:-1;16537:24:0;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16537:30:0;;16360:214::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;-1:-1:-1;39523:10:0;-1:-1:-1;;;;;15947:28:0;;;15943:172;;15994:44;16011:5;39523:10;17282:162;:::i;15994:44::-;15989:126;;16065:35;;-1:-1:-1;;;16065:35:0;;;;;;;;;;;15989:126;16125:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16125:35:0;-1:-1:-1;;;;;16125:35:0;;;;;;;;;16175:28;;16125:24;;16175:28;;;;;;;15890:320;15812:398;;:::o;19903:2764::-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;-1:-1:-1;;;;;20112:45:0;20128:19;-1:-1:-1;;;;;20112:45:0;;20108:86;;20166:28;;-1:-1:-1;;;20166:28:0;;;;;;;;;;;20108:86;20206:27;19036:24;;;:15;:24;;;;;19260:26;;39523:10;18673:30;;;-1:-1:-1;;;;;18370:28:0;;18651:20;;;18648:56;20389:179;;20481:43;20498:4;39523:10;17282:162;:::i;20481:43::-;20476:92;;20533:35;;-1:-1:-1;;;20533:35:0;;;;;;;;;;;20476:92;-1:-1:-1;;;;;20583:16:0;;20579:52;;20608:23;;-1:-1:-1;;;20608:23:0;;;;;;;;;;;20579:52;20642:43;20664:4;20670:2;20674:7;20683:1;20642:21;:43::i;:::-;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;-1:-1:-1;;;;;21300:24:0;;;;;;;:18;:24;;;;;;21298:26;;-1:-1:-1;;21298:26:0;;;21368:22;;;;;;;;;21366:24;;-1:-1:-1;21366:24:0;;;14703:11;14678:23;14674:41;14661:63;-1:-1:-1;;;14661:63:0;21654:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;21943:47:0;;:52;;21939:617;;22047:1;22037:11;;22015:19;22168:30;;;:17;:30;;;;;;:35;;22164:378;;22304:13;;22289:11;:28;22285:239;;22449:30;;;;:17;:30;;;;;:52;;;22285:239;21997:559;21939:617;22600:7;22596:2;-1:-1:-1;;;;;22581:27:0;22590:4;-1:-1:-1;;;;;22581:27:0;;;;;;;;;;;22618:42;20030:2637;;;19903:2764;;;:::o;22758:187::-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;1641:513:2:-;1780:23;1868:8;1843:22;1868:8;1934:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:36:2;;-1:-1:-1;;1934:36:2;;;;;;;;;;;;1897:73;;1989:9;1984:123;2005:14;2000:1;:19;1984:123;;2060:32;2080:8;;2089:1;2080:11;;;;;;;:::i;:::-;;;;;;;2060:19;:32::i;:::-;2044:10;2055:1;2044:13;;;;;;;;:::i;:::-;;;;;;;;;;:48;2021:3;;1984:123;;;-1:-1:-1;2127:10:2;1641:513;-1:-1:-1;;;;1641:513:2:o;11391:150:0:-;11463:7;11505:27;11524:7;11505:18;:27::i;12390:1768:26:-;2356:21:23;:19;:21::i;:::-;-1:-1:-1;;;;;12470:17:26;::::1;12466:62;;12496:32;;-1:-1:-1::0;;;12496:32:26::1;;;;;;;;;;;12466:62;-1:-1:-1::0;;;;;;;12542:58:26;::::1;::::0;12538:115:::1;;12621:32;;-1:-1:-1::0;;;12621:32:26::1;;;;;;;;;;;12538:115;12667:9;:14;;12680:1;12667:14:::0;12663:60:::1;;12690:33;;-1:-1:-1::0;;;12690:33:26::1;;;;;;;;;;;12663:60;12766:11;::::0;6359:7:0;6546:13;12737:26:26::1;::::0;::::1;::::0;::::1;;:::i;:::-;:40;12733:110;;;12798:45;;-1:-1:-1::0;;;12798:45:26::1;;;;;;;;;;;12733:110;12942:11;::::0;-1:-1:-1;;;;;12882:45:26;::::1;12942:11;12882:45:::0;;;:40:::1;:45;::::0;;;;;12942:11:::1;::::0;;::::1;::::0;12870:57:::1;::::0;12882:45:::1;12870:9:::0;:57:::1;:::i;:::-;:83;;;12853:165;;;12971:47;;-1:-1:-1::0;;;12971:47:26::1;;;;;;;;;;;12853:165;13151:11;13164:18:::0;13186:31:::1;13198:7;;13207:9;13186:31;;:11;:31::i;:::-;13150:67:::0;;-1:-1:-1;13150:67:26;-1:-1:-1;13231:15:26;::::1;;13241:5;13231:15:::0;13227:62:::1;;13255:34;;-1:-1:-1::0;;;13255:34:26::1;;;;;;;;;;;13227:62;13303:50;::::0;-1:-1:-1;;;13303:50:26;;13327:10:::1;13303:50;::::0;::::1;10182:34:27::0;13347:4:26::1;10232:18:27::0;;;10225:43;13356:10:26;;13303:13:::1;-1:-1:-1::0;;;;;13303:23:26::1;::::0;::::1;::::0;10117:18:27;;13303:50:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;13299:119;;;13387:31;;-1:-1:-1::0;;;13387:31:26::1;;;;;;;;;;;13299:119;13432:35;::::0;-1:-1:-1;;;13432:35:26;;13456:10:::1;13432:35;::::0;::::1;1679:51:27::0;13470:10:26;;13432:13:::1;-1:-1:-1::0;;;;;13432:23:26::1;::::0;::::1;::::0;1652:18:27;;13432:35:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;13428:106;;;13501:33;;-1:-1:-1::0;;;13501:33:26::1;;;;;;;;;;;13428:106;-1:-1:-1::0;;;;;13545:45:26;::::1;;::::0;;;:40:::1;:45;::::0;;;;:58;;13594:9;;13545:45;:58:::1;::::0;13594:9;;13545:58:::1;;;:::i;:::-;::::0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;-1:-1:-1;13629:111:26::1;::::0;-1:-1:-1;;;13629:111:26;;13669:10:::1;13629:111;::::0;::::1;10708:34:27::0;13701:4:26::1;10758:18:27::0;;;10751:43;10810:18;;;10803:34;;;-1:-1:-1;;;;;;;13629:13:26::1;:26;::::0;::::1;::::0;10643:18:27;;13629:111:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13614:126;;13755:7;13750:60;;13771:39;;-1:-1:-1::0;;;13771:39:26::1;;;;;;;;;;;13750:60;13837:51;::::0;-1:-1:-1;;;13837:51:26;;5248:42:::1;13837:51;::::0;::::1;11272::27::0;11339:18;;;11332:34;;;13821:13:26::1;::::0;13837::::1;-1:-1:-1::0;;;;;13837:22:26::1;::::0;::::1;::::0;11245:18:27;;13837:51:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13821:67;;13903:8;13898:67;;13920:45;;-1:-1:-1::0;;;13920:45:26::1;;;;;;;;;;;13898:67;13975:21;13981:3;13986:9;13975:21;;:5;:21::i;:::-;14080:10:::0;-1:-1:-1;;;;;14012:139:26;::::1;14039:10;14012:139;14104:9:::0;14127:14:::1;6359:7:0::0;6546:13;;6304:290;14127:14:26::1;14012:139;::::0;;11577:4:27;11565:17;;;11547:36;;11614:2;11599:18;;11592:34;;;;11520:18;14012:139:26::1;;;;;;;12456:1702;;;;2398:20:23::0;1713:1;2924:7;:21;2744:208;2398:20;12390:1768:26;;:::o;11309:390::-;1531:13:20;:11;:13::i;:::-;6359:7:0;6546:13;11387::26::1;:30;11383:113;;;11438:58;;-1:-1:-1::0;;;11438:58:26::1;;;;;;;;;;;11383:113;11527:11;;11510:13;:28:::0;11506:94:::1;;11559:41;;-1:-1:-1::0;;;11559:41:26::1;;;;;;;;;;;11506:94;11610:11;:27:::0;;;11653:39:::1;::::0;11624:13;;11653:39:::1;::::0;;;::::1;11309:390:::0;:::o;7045:230:0:-;7117:7;-1:-1:-1;;;;;7140:19:0;;7136:60;;7168:28;;-1:-1:-1;;;7168:28:0;;;;;;;;;;;7136:60;-1:-1:-1;;;;;;7213:25:0;;;;;:18;:25;;;;;;1360:13;7213:55;;7045:230::o;2293:101:20:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5417:879:2:-;5495:16;5547:19;5580:25;5619:22;5644:16;5654:5;5644:9;:16::i;:::-;5619:41;;5674:25;5716:14;5702:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5702:29:2;;5674:57;;5745:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5745:31:2;5795:9;5790:461;5839:14;5824:11;:29;5790:461;;5890:15;5903:1;5890:12;:15::i;:::-;5878:27;;5927:9;:16;;;5967:8;5923:71;6015:14;;-1:-1:-1;;;;;6015:28:2;;6011:109;;6087:14;;;-1:-1:-1;6011:109:2;6162:5;-1:-1:-1;;;;;6141:26:2;:17;-1:-1:-1;;;;;6141:26:2;;6137:100;;6217:1;6191:8;6200:13;;;;;;6191:23;;;;;;;;:::i;:::-;;;;;;:27;;;;;6137:100;5855:3;;5790:461;;;-1:-1:-1;6271:8:2;;5417:879;-1:-1:-1;;;;;;5417:879:2:o;10274:218:26:-;1531:13:20;:11;:13::i;:::-;10357:7:26::1;;10344:9;:20:::0;10340:69:::1;;10373:36;;-1:-1:-1::0;;;10373:36:26::1;;;;;;;;;;;10340:69;10419:7;:19:::0;;;10454:31:::1;::::0;10429:9;;10454:31:::1;::::0;;;::::1;10274:218:::0;:::o;14508:622::-;1531:13:20;:11;:13::i;:::-;14612:11:26::1;::::0;6359:7:0;6546:13;14583:26:26::1;::::0;::::1;::::0;::::1;;:::i;:::-;:40;14579:110;;;14644:45;;-1:-1:-1::0;;;14644:45:26::1;;;;;;;;;;;14579:110;14703:22;::::0;4941:1:::1;::::0;14703:34:::1;::::0;14728:9;;14703:22:::1;::::0;::::1;:57;:22;:34;:::i;:::-;:57;;;14699:136;;;14781:54;;-1:-1:-1::0;;;14781:54:26::1;;;;;;;;;;;14699:136;14869:22;:35:::0;;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;-1:-1:-1::0;;14869:35:26;;::::1;::::0;;;::::1;::::0;;;14924:37:::1;::::0;5077:42:::1;::::0;14924:37;::::1;:5;:37::i;:::-;15061:1;5077:42;15004:10;14977:146;15076:9:::0;15099:14:::1;6359:7:0::0;6546:13;;6304:290;15099:14:26::1;14977:146;::::0;;11577:4:27;11565:17;;;11547:36;;11614:2;11599:18;;11592:34;;;;11520:18;14977:146:26::1;;;;;;;14508:622:::0;:::o;10208:102:0:-;10264:13;10296:7;10289:14;;;;;:::i;2528:2454:2:-;2667:16;2732:4;2723:5;:13;2719:45;;2745:19;;-1:-1:-1;;;2745:19:2;;;;;;;;;;;2719:45;2778:19;2811:17;2831:14;5645:7:0;5671:13;;5590:101;2831:14:2;2811:34;-1:-1:-1;3076:9:2;3069:4;:16;3065:71;;;3112:9;3105:16;;3065:71;3149:25;3177:16;3187:5;3177:9;:16::i;:::-;3149:44;;3368:4;3360:5;:12;3356:271;;;3414:12;;;3448:31;;;3444:109;;;3523:11;3503:31;;3444:109;3374:193;3356:271;;;-1:-1:-1;3611:1:2;3356:271;3640:25;3682:17;3668:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3668:32:2;;3640:60;;3718:17;3739:1;3718:22;3714:76;;3767:8;-1:-1:-1;3760:15:2;;-1:-1:-1;;;3760:15:2;3714:76;3931:31;3965:26;3985:5;3965:19;:26::i;:::-;3931:60;;4005:25;4247:9;:16;;;4242:90;;-1:-1:-1;4303:14:2;;4242:90;4362:5;4345:467;4374:4;4369:1;:9;;:45;;;;;4397:17;4382:11;:32;;4369:45;4345:467;;;4451:15;4464:1;4451:12;:15::i;:::-;4439:27;;4488:9;:16;;;4528:8;4484:71;4576:14;;-1:-1:-1;;;;;4576:28:2;;4572:109;;4648:14;;;-1:-1:-1;4572:109:2;4723:5;-1:-1:-1;;;;;4702:26:2;:17;-1:-1:-1;;;;;4702:26:2;;4698:100;;4778:1;4752:8;4761:13;;;;;;4752:23;;;;;;;;:::i;:::-;;;;;;:27;;;;;4698:100;4416:3;;4345:467;;;-1:-1:-1;;;4894:29:2;;;-1:-1:-1;4901:8:2;;-1:-1:-1;;2528:2454:2;;;;;;:::o;16394:296:26:-;1531:13:20;:11;:13::i;:::-;16558:5:26::1;16541:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;16531:34;;;;;;16506:7;16489:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;16479:36;;;;;;:86:::0;16462:153:::1;;16583:32;;-1:-1:-1::0;;;16583:32:26::1;;;;;;;;;;;16462:153;16625:5;:15;16633:7:::0;16625:5;:15:::1;:::i;:::-;;16656:27;16675:7;16656:27;;;;;;:::i;:::-;;;;;;;;16394:296:::0;:::o;16901:231:0:-;39523:10;16995:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;16995:49:0;;;;;;;;;;;;:60;;-1:-1:-1;;16995:60:0;;;;;;;;;;17070:55;;540:41:27;;;16995:49:0;;39523:10;17070:55;;513:18:27;17070:55:0;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;-1:-1:-1;;;;;23740:14:0;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;-1:-1:-1;;;23861:40:0;;;;;;;;;;;23773:143;23526:396;;;;:::o;1070:418:2:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5645:7:0;5671:13;1261:7:2;:25;1228:101;;1309:9;1070:418;-1:-1:-1;;1070:418:2:o;1228:101::-;1350:21;1363:7;1350:12;:21::i;:::-;1338:33;;1385:9;:16;;;1381:63;;;1424:9;1070:418;-1:-1:-1;;1070:418:2:o;1381:63::-;1460:21;1473:7;1460:12;:21::i;16993:246:26:-;17099:13;17129:16;17137:7;17129;:16::i;:::-;17124:59;;17154:29;;-1:-1:-1;;;17154:29:26;;;;;;;;;;;17124:59;17225:5;17208:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;17194:38;;16993:246;;;:::o;2543:215:20:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:20;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:20;;2700:1:::1;2672:31;::::0;::::1;1679:51:27::0;1652:18;;2672:31:20::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;17693:277:0:-;17758:4;17845:13;;17835:7;:23;17793:151;;;;-1:-1:-1;;17895:26:0;;;;:17;:26;;;;;;-1:-1:-1;;;17895:44:0;:49;;17693:277::o;12515:1249::-;12582:7;12616;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:23;;;:17;:23;;;;;;;-1:-1:-1;;;12855:24:0;;:29;;12851:831;;13510:111;13517:6;13527:1;13517:11;13510:111;;-1:-1:-1;;;13587:6:0;13569:25;;;;:17;:25;;;;;;13510:111;;12851:831;12729:971;12703:997;13726:31;;-1:-1:-1;;;13726:31:0;;;;;;;;;;;15563:274:26;15757:11;;;;15741:13;15751:2;15741:9;:13::i;:::-;15730:24;;:8;:24;:::i;:::-;:38;15726:104;;;15789:41;;-1:-1:-1;;;15789:41:26;;;;;;;;;;;2431:307:23;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:23;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1207:493:24:-;1268:4;1274:7;1551:1;1556;1551:6;1547:28;;-1:-1:-1;1567:4:24;;-1:-1:-1;1573:1:24;1559:16;;1547:28;1601:5;;;1605:1;1601;:5;:1;1624:5;;;;:::i;:::-;;:10;1620:33;;1644:5;1651:1;1636:17;;;;;;;1620:33;1675:4;;-1:-1:-1;1681:1:24;-1:-1:-1;1207:493:24;;;;;;:::o;27091:2902:0:-;27163:20;27186:13;;;27213;;;27209:44;;27235:18;;-1:-1:-1;;;27235:18:0;;;;;;;;;;;27209:44;27264:61;27294:1;27298:2;27302:12;27316:8;27264:21;:61::i;:::-;-1:-1:-1;;;;;27728:22:0;;;;;;:18;:22;;;;1495:2;27728:22;;;:71;;27766:32;27754:45;;27728:71;;;28035:31;;;:17;:31;;;;;-1:-1:-1;15123:15:0;;15097:24;15093:46;14703:11;14678:23;14674:41;14671:52;14661:63;;28035:170;;28264:23;;;;28035:31;;27728:22;;29016:25;27728:22;;28872:328;29520:1;29506:12;29502:20;29461:339;29560:3;29551:7;29548:16;29461:339;;29774:7;29764:8;29761:1;29734:25;29731:1;29728;29723:59;29612:1;29599:15;29461:339;;;29465:75;29831:8;29843:1;29831:13;29827:45;;29853:19;;-1:-1:-1;;;29853:19:0;;;;;;;;;;;29827:45;29887:13;:19;-1:-1:-1;22758:187:0;;;:::o;1796:162:20:-;1710:6;;-1:-1:-1;;;;;1710:6:20;39523:10:0;1855:23:20;1851:101;;1901:40;;-1:-1:-1;;;1901:40:20;;39523:10:0;1901:40:20;;;1679:51:27;1652:18;;1901:40:20;1533:203:27;2912:187:20;3004:6;;;-1:-1:-1;;;;;3020:17:20;;;-1:-1:-1;;;;;;3020:17:20;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;11979:159:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12106:24:0;;;;:17;:24;;;;;;12087:44;;:18;:44::i;25948:697::-;26126:88;;-1:-1:-1;;;26126:88:0;;26106:4;;-1:-1:-1;;;;;26126:45:0;;;;;:88;;39523:10;;26193:4;;26199:7;;26208:5;;26126:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26126:88:0;;;;;;;;-1:-1:-1;;26126:88:0;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26404:6;:13;26421:1;26404:18;26400:229;;26449:40;;-1:-1:-1;;;26449:40:0;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;-1:-1:-1;;;;;;26282:64:0;-1:-1:-1;;;26282:64:0;;-1:-1:-1;26122:517:0;25948:697;;;;;;:::o;11724:164::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11834:47:0;11853:27;11872:7;11853:18;:27::i;:::-;-1:-1:-1;;;;;;;;;;;;;13967:41:0;;;;2004:3;14052:33;;;14018:68;;-1:-1:-1;;;14018:68:0;-1:-1:-1;;;14115:24:0;;:29;;-1:-1:-1;;;14096:48:0;;;;2513:3;14183:28;;;;-1:-1:-1;;;14154:58:0;-1:-1:-1;13858:361:0:o;14:131:27:-;-1:-1:-1;;;;;;88:32:27;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:27;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:27;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:27:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:27;;1348:180;-1:-1:-1;1348:180:27:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:27;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:27:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:615::-;2779:6;2787;2840:2;2828:9;2819:7;2815:23;2811:32;2808:52;;;2856:1;2853;2846:12;2808:52;2896:9;2883:23;2925:18;2966:2;2958:6;2955:14;2952:34;;;2982:1;2979;2972:12;2952:34;3020:6;3009:9;3005:22;2995:32;;3065:7;3058:4;3054:2;3050:13;3046:27;3036:55;;3087:1;3084;3077:12;3036:55;3127:2;3114:16;3153:2;3145:6;3142:14;3139:34;;;3169:1;3166;3159:12;3139:34;3222:7;3217:2;3207:6;3204:1;3200:14;3196:2;3192:23;3188:32;3185:45;3182:65;;;3243:1;3240;3233:12;3182:65;3274:2;3266:11;;;;;3296:6;;-1:-1:-1;2693:615:27;;-1:-1:-1;;;;2693:615:27:o;3313:349::-;3397:12;;-1:-1:-1;;;;;3393:38:27;3381:51;;3485:4;3474:16;;;3468:23;3493:18;3464:48;3448:14;;;3441:72;3576:4;3565:16;;;3559:23;3552:31;3545:39;3529:14;;;3522:63;3638:4;3627:16;;;3621:23;3646:8;3617:38;3601:14;;3594:62;3313:349::o;3667:724::-;3902:2;3954:21;;;4024:13;;3927:18;;;4046:22;;;3873:4;;3902:2;4125:15;;;;4099:2;4084:18;;;3873:4;4168:197;4182:6;4179:1;4176:13;4168:197;;;4231:52;4279:3;4270:6;4264:13;4231:52;:::i;:::-;4340:15;;;;4312:4;4303:14;;;;;4204:1;4197:9;4168:197;;4396:156;4462:20;;4522:4;4511:16;;4501:27;;4491:55;;4542:1;4539;4532:12;4557:256;4623:6;4631;4684:2;4672:9;4663:7;4659:23;4655:32;4652:52;;;4700:1;4697;4690:12;4652:52;4723:29;4742:9;4723:29;:::i;:::-;4713:39;;4771:36;4803:2;4792:9;4788:18;4771:36;:::i;:::-;4761:46;;4557:256;;;;;:::o;4818:186::-;4877:6;4930:2;4918:9;4909:7;4905:23;4901:32;4898:52;;;4946:1;4943;4936:12;4898:52;4969:29;4988:9;4969:29;:::i;5009:632::-;5180:2;5232:21;;;5302:13;;5205:18;;;5324:22;;;5151:4;;5180:2;5403:15;;;;5377:2;5362:18;;;5151:4;5446:169;5460:6;5457:1;5454:13;5446:169;;;5521:13;;5509:26;;5590:15;;;;5555:12;;;;5482:1;5475:9;5446:169;;5646:182;5703:6;5756:2;5744:9;5735:7;5731:23;5727:32;5724:52;;;5772:1;5769;5762:12;5724:52;5795:27;5812:9;5795:27;:::i;5833:322::-;5910:6;5918;5926;5979:2;5967:9;5958:7;5954:23;5950:32;5947:52;;;5995:1;5992;5985:12;5947:52;6018:29;6037:9;6018:29;:::i;:::-;6008:39;6094:2;6079:18;;6066:32;;-1:-1:-1;6145:2:27;6130:18;;;6117:32;;5833:322;-1:-1:-1;;;5833:322:27:o;6160:127::-;6221:10;6216:3;6212:20;6209:1;6202:31;6252:4;6249:1;6242:15;6276:4;6273:1;6266:15;6292:632;6357:5;6387:18;6428:2;6420:6;6417:14;6414:40;;;6434:18;;:::i;:::-;6509:2;6503:9;6477:2;6563:15;;-1:-1:-1;;6559:24:27;;;6585:2;6555:33;6551:42;6539:55;;;6609:18;;;6629:22;;;6606:46;6603:72;;;6655:18;;:::i;:::-;6695:10;6691:2;6684:22;6724:6;6715:15;;6754:6;6746;6739:22;6794:3;6785:6;6780:3;6776:16;6773:25;6770:45;;;6811:1;6808;6801:12;6770:45;6861:6;6856:3;6849:4;6841:6;6837:17;6824:44;6916:1;6909:4;6900:6;6892;6888:19;6884:30;6877:41;;;;6292:632;;;;;:::o;6929:451::-;6998:6;7051:2;7039:9;7030:7;7026:23;7022:32;7019:52;;;7067:1;7064;7057:12;7019:52;7107:9;7094:23;7140:18;7132:6;7129:30;7126:50;;;7172:1;7169;7162:12;7126:50;7195:22;;7248:4;7240:13;;7236:27;-1:-1:-1;7226:55:27;;7277:1;7274;7267:12;7226:55;7300:74;7366:7;7361:2;7348:16;7343:2;7339;7335:11;7300:74;:::i;7385:118::-;7471:5;7464:13;7457:21;7450:5;7447:32;7437:60;;7493:1;7490;7483:12;7508:315;7573:6;7581;7634:2;7622:9;7613:7;7609:23;7605:32;7602:52;;;7650:1;7647;7640:12;7602:52;7673:29;7692:9;7673:29;:::i;:::-;7663:39;;7752:2;7741:9;7737:18;7724:32;7765:28;7787:5;7765:28;:::i;:::-;7812:5;7802:15;;;7508:315;;;;;:::o;7828:667::-;7923:6;7931;7939;7947;8000:3;7988:9;7979:7;7975:23;7971:33;7968:53;;;8017:1;8014;8007:12;7968:53;8040:29;8059:9;8040:29;:::i;:::-;8030:39;;8088:38;8122:2;8111:9;8107:18;8088:38;:::i;:::-;8078:48;;8173:2;8162:9;8158:18;8145:32;8135:42;;8228:2;8217:9;8213:18;8200:32;8255:18;8247:6;8244:30;8241:50;;;8287:1;8284;8277:12;8241:50;8310:22;;8363:4;8355:13;;8351:27;-1:-1:-1;8341:55:27;;8392:1;8389;8382:12;8341:55;8415:74;8481:7;8476:2;8463:16;8458:2;8454;8450:11;8415:74;:::i;:::-;8405:84;;;7828:667;;;;;;;:::o;8500:268::-;8698:3;8683:19;;8711:51;8687:9;8744:6;8711:51;:::i;8773:260::-;8841:6;8849;8902:2;8890:9;8881:7;8877:23;8873:32;8870:52;;;8918:1;8915;8908:12;8870:52;8941:29;8960:9;8941:29;:::i;:::-;8931:39;;8989:38;9023:2;9012:9;9008:18;8989:38;:::i;9038:380::-;9117:1;9113:12;;;;9160;;;9181:61;;9235:4;9227:6;9223:17;9213:27;;9181:61;9288:2;9280:6;9277:14;9257:18;9254:38;9251:161;;9334:10;9329:3;9325:20;9322:1;9315:31;9369:4;9366:1;9359:15;9397:4;9394:1;9387:15;9251:161;;9038:380;;;:::o;9423:127::-;9484:10;9479:3;9475:20;9472:1;9465:31;9515:4;9512:1;9505:15;9539:4;9536:1;9529:15;9555:127;9616:10;9611:3;9607:20;9604:1;9597:31;9647:4;9644:1;9637:15;9671:4;9668:1;9661:15;9687:125;9752:9;;;9773:10;;;9770:36;;;9786:18;;:::i;9817:148::-;9905:4;9884:12;;;9898;;;9880:31;;9923:13;;9920:39;;;9939:18;;:::i;10279:184::-;10349:6;10402:2;10390:9;10381:7;10377:23;10373:32;10370:52;;;10418:1;10415;10408:12;10370:52;-1:-1:-1;10441:16:27;;10279:184;-1:-1:-1;10279:184:27:o;10848:245::-;10915:6;10968:2;10956:9;10947:7;10943:23;10939:32;10936:52;;;10984:1;10981;10974:12;10936:52;11016:9;11010:16;11035:28;11057:5;11035:28;:::i;11763:843::-;11891:3;11920:1;11953:6;11947:13;11983:36;12009:9;11983:36;:::i;:::-;12038:1;12055:17;;;12081:133;;;;12228:1;12223:358;;;;12048:533;;12081:133;-1:-1:-1;;12114:24:27;;12102:37;;12187:14;;12180:22;12168:35;;12159:45;;;-1:-1:-1;12081:133:27;;12223:358;12254:6;12251:1;12244:17;12284:4;12329;12326:1;12316:18;12356:1;12370:165;12384:6;12381:1;12378:13;12370:165;;;12462:14;;12449:11;;;12442:35;12505:16;;;;12399:10;;12370:165;;;12374:3;;;12564:6;12559:3;12555:16;12548:23;;12048:533;-1:-1:-1;12597:3:27;;11763:843;-1:-1:-1;;;;;;11763:843:27:o;12611:289::-;12742:3;12780:6;12774:13;12796:66;12855:6;12850:3;12843:4;12835:6;12831:17;12796:66;:::i;:::-;12878:16;;;;;12611:289;-1:-1:-1;;12611:289:27:o;12905:543::-;13007:2;13002:3;12999:11;12996:446;;;13043:1;13067:5;13064:1;13057:16;13111:4;13108:1;13098:18;13181:2;13169:10;13165:19;13162:1;13158:27;13152:4;13148:38;13217:4;13205:10;13202:20;13199:47;;;-1:-1:-1;13240:4:27;13199:47;13295:2;13290:3;13286:12;13283:1;13279:20;13273:4;13269:31;13259:41;;13350:82;13368:2;13361:5;13358:13;13350:82;;;13413:17;;;13394:1;13383:13;13350:82;;13624:1345;13750:3;13744:10;13777:18;13769:6;13766:30;13763:56;;;13799:18;;:::i;:::-;13828:97;13918:6;13878:38;13910:4;13904:11;13878:38;:::i;:::-;13872:4;13828:97;:::i;:::-;13980:4;;14037:2;14026:14;;14054:1;14049:663;;;;14756:1;14773:6;14770:89;;;-1:-1:-1;14825:19:27;;;14819:26;14770:89;-1:-1:-1;;13581:1:27;13577:11;;;13573:24;13569:29;13559:40;13605:1;13601:11;;;13556:57;14872:81;;14019:944;;14049:663;11710:1;11703:14;;;11747:4;11734:18;;-1:-1:-1;;14085:20:27;;;14203:236;14217:7;14214:1;14211:14;14203:236;;;14306:19;;;14300:26;14285:42;;14398:27;;;;14366:1;14354:14;;;;14233:19;;14203:236;;;14207:3;14467:6;14458:7;14455:19;14452:201;;;14528:19;;;14522:26;-1:-1:-1;;14611:1:27;14607:14;;;14623:3;14603:24;14599:37;14595:42;14580:58;14565:74;;14452:201;-1:-1:-1;;;;;14699:1:27;14683:14;;;14679:22;14666:36;;-1:-1:-1;13624:1345:27:o;14974:127::-;15035:10;15030:3;15026:20;15023:1;15016:31;15066:4;15063:1;15056:15;15090:4;15087:1;15080:15;15106:489;-1:-1:-1;;;;;15375:15:27;;;15357:34;;15427:15;;15422:2;15407:18;;15400:43;15474:2;15459:18;;15452:34;;;15522:3;15517:2;15502:18;;15495:31;;;15300:4;;15543:46;;15569:19;;15561:6;15543:46;:::i;:::-;15535:54;15106:489;-1:-1:-1;;;;;;15106:489:27:o;15600:249::-;15669:6;15722:2;15710:9;15701:7;15697:23;15693:32;15690:52;;;15738:1;15735;15728:12;15690:52;15770:9;15764:16;15789:30;15813:5;15789:30;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "44235": [
        { "start": 2842, "length": 32 },
        { "start": 3011, "length": 32 },
        { "start": 3274, "length": 32 },
        { "start": 3466, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "explicitOwnershipOf(uint256)": "c23dc68f",
    "explicitOwnershipsOf(uint256[])": "5bbb2177",
    "getApproved(uint256)": "081812fc",
    "getCurrentMaxSupply()": "83b40da2",
    "getCurrentPrice()": "eb91d37e",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address,uint8)": "691562a0",
    "mintPartnership(uint8)": "945711b2",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setMaxSupply(uint256)": "6f8b44b0",
    "setPrice(uint256)": "91b7f5ed",
    "setUri(string)": "9b642de1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "tokensOfOwner(address)": "8462151c",
    "tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_maxWallet\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotComputeTotalPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotSetMaxSupplyBelowCurrentNumberOfNftMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotSetMaxSupplyToSameAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotSetPriceToSamePrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotSetUriToSameUri\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotTransferUsdcToContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__CannotTransferUsdcToReceiptAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__MaxNftMintedReachedForReceiptAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__MaxNftReachedForReceiptAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__MaxPartnershipMintReachedOrTooMuchNftsAsked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__MaxSupplyReachedOrTooMuchNftsAsked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__NotEnoughUSDCAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__NotEnoughUSDCInBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__ShouldBeAValidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClubCPG__ShouldBeAValidQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quantity\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentIndex\",\"type\":\"uint256\"}],\"name\":\"ClubCPG__Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"ClubCPG__SetNewMaxSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ClubCPG__SetNewPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"ClubCPG__SetNewUri\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_quantity\",\"type\":\"uint8\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_quantity\",\"type\":\"uint8\"}],\"name\":\"mintPartnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newUri\",\"type\":\"string\"}],\"name\":\"setUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:thanks\":\"Thanks to our partner Metalyde\",\"details\":\"ERC721A USDC mint based contract\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getCurrentMaxSupply()\":{\"details\":\"Return the maximum supply of the collection\",\"returns\":{\"_0\":\"s_maxSupply\"}},\"getCurrentPrice()\":{\"details\":\"Return the current price to buy one nft\",\"returns\":{\"_0\":\"s_price\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"mint(address,uint8)\":{\"custom:revert\":\"Please refer to the corresponding custom error documentation\",\"details\":\"Mint and transfer token to the `_to` address. Implement the nonReetrant modifier form OZ to avoid reentrancy attack Transfer usdc to the receipt address `RECEIPT_ADDRESS`\",\"params\":{\"_quantity\":\"The number of NFT that will be mint\",\"_to\":\"The address that will receive the NFT\"}},\"mintPartnership(uint8)\":{\"custom:revert\":\"Please refer to the corresponding custom error documentation\",\"details\":\"Mint NFT for partnership. Only the current `owner` can call this function\",\"params\":{\"_quantity\":\"The number of NFT that will be mint\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setMaxSupply(uint256)\":{\"custom:revert\":\"Please refer to the corresponding custom error documentation\",\"details\":\"Set the maximum supply of the collection. Only the current `owner` can call this function\",\"params\":{\"_newMaxSupply\":\"The new maximum supply of the NFT collection.\"}},\"setPrice(uint256)\":{\"custom:revert\":\"Please refer to the corresponding custom error documentation\",\"details\":\"Set the current price to buy one nft. Only the current `owner` can call this function\",\"params\":{\"_newPrice\":\"The new price in USDC. USDC have 6 decimals\"}},\"setUri(string)\":{\"custom:revert\":\"Please refer to the corresponding custom error documentation\",\"details\":\"Set URI of the NFT. Only the current `owner` can call this function\",\"params\":{\"_newUri\":\"The new URI that point to the metadata\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"custom:revert\":\"Please refer to the corresponding custom error documentation\",\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\",\"params\":{\"tokenId\":\"The NFT Id to check metadata\"},\"returns\":{\"_0\":\"s_uri\"}},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Membership NFT of Champagne Philippe Gonet Club\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"getCurrentMaxSupply()\":{\"notice\":\"Get the maximum number of membership NFT\"},\"getCurrentPrice()\":{\"notice\":\"Get the current price to buy one nft\"},\"mint(address,uint8)\":{\"notice\":\"Allow you to mint the membership NFT\"},\"mintPartnership(uint8)\":{\"notice\":\"Allow the owner of the contract to mint the membership NFT dedicated to the partner\"},\"setMaxSupply(uint256)\":{\"notice\":\"Set the maximum number of membership NFT\"},\"setPrice(uint256)\":{\"notice\":\"Set the current price to buy one nft\"},\"setUri(string)\":{\"notice\":\"Allow the owner of the contract to set the metadata for the membership NFT\"},\"tokenURI(uint256)\":{\"notice\":\"Get the Metadata for a give NFT\"}},\"notice\":\"You can use this contract to mint membership NFT and join the Champagne Philippe Gonet Club. https://www.champagne-philippe-gonet.com/homepage/\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ClubCPG.sol\":\"ClubCPG\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a/contracts/=lib/erc721a/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":stablecoin-evm/=lib/stablecoin-evm/\"]},\"sources\":{\"lib/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"lib/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"lib/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205\",\"dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW\"]},\"lib/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"src/ClubCPG.sol\":{\"keccak256\":\"0xc11f5d80cd5395cb7b2cd2b1b408a880232f84f66bbae78fae5a36226706b493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2f429f1a83f1294e323728936f5d3106ab170abaf385677fd8dbb26e3805040\",\"dweb:/ipfs/Qmf9BZPAmADJnEdHbYCToSRUS1VxwZy8AWXSsZvBYc4RCf\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "_name", "type": "string" },
            { "internalType": "string", "name": "_symbol", "type": "string" },
            { "internalType": "string", "name": "_uri", "type": "string" },
            { "internalType": "uint8", "name": "_maxWallet", "type": "uint8" },
            {
              "internalType": "uint256",
              "name": "_maxSupply",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_price", "type": "uint256" },
            {
              "internalType": "address",
              "name": "_usdcAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        { "inputs": [], "type": "error", "name": "BalanceQueryForZeroAddress" },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotComputeTotalPrice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotSetMaxSupplyBelowCurrentNumberOfNftMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotSetMaxSupplyToSameAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotSetPriceToSamePrice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotSetUriToSameUri"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotTransferUsdcToContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__CannotTransferUsdcToReceiptAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__MaxNftMintedReachedForReceiptAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__MaxNftReachedForReceiptAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__MaxPartnershipMintReachedOrTooMuchNftsAsked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__MaxSupplyReachedOrTooMuchNftsAsked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__NotEnoughUSDCAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__NotEnoughUSDCInBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__ShouldBeAValidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClubCPG__ShouldBeAValidQuantity"
        },
        { "inputs": [], "type": "error", "name": "InvalidQueryRange" },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        { "inputs": [], "type": "error", "name": "MintToZeroAddress" },
        { "inputs": [], "type": "error", "name": "MintZeroQuantity" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        { "inputs": [], "type": "error", "name": "TransferFromIncorrectOwner" },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        { "inputs": [], "type": "error", "name": "TransferToZeroAddress" },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalPrice",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "quantity",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "currentIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClubCPG__Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMaxSupply",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClubCPG__SetNewMaxSupply",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClubCPG__SetNewPrice",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newUri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClubCPG__SetNewUri",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipOf",
          "outputs": [
            {
              "internalType": "struct IERC721A.TokenOwnership",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                { "internalType": "bool", "name": "burned", "type": "bool" },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "explicitOwnershipsOf",
          "outputs": [
            {
              "internalType": "struct IERC721A.TokenOwnership[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "startTimestamp",
                  "type": "uint64"
                },
                { "internalType": "bool", "name": "burned", "type": "bool" },
                {
                  "internalType": "uint24",
                  "name": "extraData",
                  "type": "uint24"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentMaxSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentPrice",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_to", "type": "address" },
            { "internalType": "uint8", "name": "_quantity", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "_quantity", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintPartnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "_data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newMaxSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxSupply"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPrice"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "_newUri", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUri"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwner",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "start", "type": "uint256" },
            { "internalType": "uint256", "name": "stop", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensOfOwnerIn",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "explicitOwnershipOf(uint256)": {
            "details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
          },
          "explicitOwnershipsOf(uint256[])": {
            "details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getCurrentMaxSupply()": {
            "details": "Return the maximum supply of the collection",
            "returns": { "_0": "s_maxSupply" }
          },
          "getCurrentPrice()": {
            "details": "Return the current price to buy one nft",
            "returns": { "_0": "s_price" }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "mint(address,uint8)": {
            "custom:revert": "Please refer to the corresponding custom error documentation",
            "details": "Mint and transfer token to the `_to` address. Implement the nonReetrant modifier form OZ to avoid reentrancy attack Transfer usdc to the receipt address `RECEIPT_ADDRESS`",
            "params": {
              "_quantity": "The number of NFT that will be mint",
              "_to": "The address that will receive the NFT"
            }
          },
          "mintPartnership(uint8)": {
            "custom:revert": "Please refer to the corresponding custom error documentation",
            "details": "Mint NFT for partnership. Only the current `owner` can call this function",
            "params": { "_quantity": "The number of NFT that will be mint" }
          },
          "name()": { "details": "Returns the token collection name." },
          "owner()": { "details": "Returns the address of the current owner." },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setMaxSupply(uint256)": {
            "custom:revert": "Please refer to the corresponding custom error documentation",
            "details": "Set the maximum supply of the collection. Only the current `owner` can call this function",
            "params": {
              "_newMaxSupply": "The new maximum supply of the NFT collection."
            }
          },
          "setPrice(uint256)": {
            "custom:revert": "Please refer to the corresponding custom error documentation",
            "details": "Set the current price to buy one nft. Only the current `owner` can call this function",
            "params": {
              "_newPrice": "The new price in USDC. USDC have 6 decimals"
            }
          },
          "setUri(string)": {
            "custom:revert": "Please refer to the corresponding custom error documentation",
            "details": "Set URI of the NFT. Only the current `owner` can call this function",
            "params": { "_newUri": "The new URI that point to the metadata" }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
          },
          "symbol()": { "details": "Returns the token collection symbol." },
          "tokenURI(uint256)": {
            "custom:revert": "Please refer to the corresponding custom error documentation",
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token.",
            "params": { "tokenId": "The NFT Id to check metadata" },
            "returns": { "_0": "s_uri" }
          },
          "tokensOfOwner(address)": {
            "details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
          },
          "tokensOfOwnerIn(address,uint256,uint256)": {
            "details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getCurrentMaxSupply()": {
            "notice": "Get the maximum number of membership NFT"
          },
          "getCurrentPrice()": {
            "notice": "Get the current price to buy one nft"
          },
          "mint(address,uint8)": {
            "notice": "Allow you to mint the membership NFT"
          },
          "mintPartnership(uint8)": {
            "notice": "Allow the owner of the contract to mint the membership NFT dedicated to the partner"
          },
          "setMaxSupply(uint256)": {
            "notice": "Set the maximum number of membership NFT"
          },
          "setPrice(uint256)": {
            "notice": "Set the current price to buy one nft"
          },
          "setUri(string)": {
            "notice": "Allow the owner of the contract to set the metadata for the membership NFT"
          },
          "tokenURI(uint256)": { "notice": "Get the Metadata for a give NFT" }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a/contracts/=lib/erc721a/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "stablecoin-evm/=lib/stablecoin-evm/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/ClubCPG.sol": "ClubCPG" },
      "libraries": {}
    },
    "sources": {
      "lib/erc721a/contracts/ERC721A.sol": {
        "keccak256": "0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c",
        "urls": [
          "bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809",
          "dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy"
        ],
        "license": "MIT"
      },
      "lib/erc721a/contracts/IERC721A.sol": {
        "keccak256": "0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad",
        "urls": [
          "bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9",
          "dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz"
        ],
        "license": "MIT"
      },
      "lib/erc721a/contracts/extensions/ERC721AQueryable.sol": {
        "keccak256": "0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7",
        "urls": [
          "bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205",
          "dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW"
        ],
        "license": "MIT"
      },
      "lib/erc721a/contracts/extensions/IERC721AQueryable.sol": {
        "keccak256": "0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942",
        "urls": [
          "bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84",
          "dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
        "urls": [
          "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
          "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "src/ClubCPG.sol": {
        "keccak256": "0xc11f5d80cd5395cb7b2cd2b1b408a880232f84f66bbae78fae5a36226706b493",
        "urls": [
          "bzz-raw://a2f429f1a83f1294e323728936f5d3106ab170abaf385677fd8dbb26e3805040",
          "dweb:/ipfs/Qmf9BZPAmADJnEdHbYCToSRUS1VxwZy8AWXSsZvBYc4RCf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ClubCPG.sol",
    "id": 44727,
    "exportedSymbols": {
      "ClubCPG": [44726],
      "ERC721A": [1622],
      "ERC721AQueryable": [2203],
      "ERC721A__IERC721Receiver": [17],
      "IERC20": [42994],
      "IERC721A": [1828],
      "IERC721AQueryable": [2255],
      "Math": [44147],
      "Ownable": [42916],
      "ReentrancyGuard": [43093]
    },
    "nodeType": "SourceUnit",
    "src": "32:17210:26",
    "nodes": [
      {
        "id": 44216,
        "nodeType": "PragmaDirective",
        "src": "32:23:26",
        "nodes": [],
        "literals": ["solidity", "0.8", ".23"]
      },
      {
        "id": 44217,
        "nodeType": "ImportDirective",
        "src": "57:59:26",
        "nodes": [],
        "absolutePath": "lib/erc721a/contracts/extensions/ERC721AQueryable.sol",
        "file": "erc721a/contracts/extensions/ERC721AQueryable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44727,
        "sourceUnit": 2204,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44219,
        "nodeType": "ImportDirective",
        "src": "117:67:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44727,
        "sourceUnit": 42917,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44218,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42916,
              "src": "125:7:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44221,
        "nodeType": "ImportDirective",
        "src": "185:82:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44727,
        "sourceUnit": 43094,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44220,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43093,
              "src": "193:15:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44223,
        "nodeType": "ImportDirective",
        "src": "268:70:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44727,
        "sourceUnit": 42995,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44222,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42994,
              "src": "276:6:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44225,
        "nodeType": "ImportDirective",
        "src": "339:65:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44727,
        "sourceUnit": 44148,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44224,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44147,
              "src": "347:4:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44726,
        "nodeType": "ContractDefinition",
        "src": "3667:13574:26",
        "nodes": [
          {
            "id": 44235,
            "nodeType": "VariableDeclaration",
            "src": "4004:38:26",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_usdcAddress",
            "nameLocation": "4029:13:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$42994",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 44234,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44233,
                "name": "IERC20",
                "nameLocations": ["4004:6:26"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42994,
                "src": "4004:6:26"
              },
              "referencedDeclaration": 42994,
              "src": "4004:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$42994",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44237,
            "nodeType": "VariableDeclaration",
            "src": "4292:27:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_maxSupply",
            "nameLocation": "4308:11:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4292:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44239,
            "nodeType": "VariableDeclaration",
            "src": "4359:23:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_price",
            "nameLocation": "4375:7:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44238,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4359:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44241,
            "nodeType": "VariableDeclaration",
            "src": "4412:20:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_uri",
            "nameLocation": "4427:5:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44240,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4412:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44243,
            "nodeType": "VariableDeclaration",
            "src": "4512:25:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_maxWallet",
            "nameLocation": "4526:11:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 44242,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "4512:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44245,
            "nodeType": "VariableDeclaration",
            "src": "4580:36:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_mintPartnershipCount",
            "nameLocation": "4594:22:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 44244,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "4580:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44248,
            "nodeType": "VariableDeclaration",
            "src": "4895:47:26",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_PARTNERSHIP_MINT",
            "nameLocation": "4918:20:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 44246,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "4895:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 44247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4941:1:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "private"
          },
          {
            "id": 44251,
            "nodeType": "VariableDeclaration",
            "src": "5022:97:26",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PARTNERSHIP_ADDRESS",
            "nameLocation": "5047:19:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44249,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5022:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839424239313133393436316638373766413336333637633130624261423041616365303246413333",
              "id": 44250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5077:42:26",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9BB91139461f877fA36367c10bBaB0Aace02FA33"
            },
            "visibility": "private"
          },
          {
            "id": 44254,
            "nodeType": "VariableDeclaration",
            "src": "5197:93:26",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "RECEIPT_ADDRESS",
            "nameLocation": "5222:15:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44252,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5197:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836654141623941454132353634454431303462436135394131333465654641373142313444433139",
              "id": 44253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5248:42:26",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6eAAb9AEA2564ED104bCa59A134eeFA71B14DC19"
            },
            "visibility": "private"
          },
          {
            "id": 44258,
            "nodeType": "VariableDeclaration",
            "src": "5620:74:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_addressToNumberOfTokenReceivedFromMint",
            "nameLocation": "5654:40:26",
            "scope": 44726,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 44257,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44255,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5628:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5620:25:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 44256,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "5639:5:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 44262,
            "nodeType": "EventDefinition",
            "src": "5963:53:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a0836faf799a35ee9837342465e84299b0f0ac68606126528e07ac3dbf68063d",
            "name": "ClubCPG__SetNewPrice",
            "nameLocation": "5969:20:26",
            "parameters": {
              "id": 44261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44260,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "6006:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44262,
                  "src": "5990:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5990:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5989:26:26"
            }
          },
          {
            "id": 44266,
            "nodeType": "EventDefinition",
            "src": "6072:61:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e1907e79e796a8fb2f932cc56e08d9194b6bc6468bdc2877e81bfde87855ba83",
            "name": "ClubCPG__SetNewMaxSupply",
            "nameLocation": "6078:24:26",
            "parameters": {
              "id": 44265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44264,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newMaxSupply",
                  "nameLocation": "6119:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44266,
                  "src": "6103:28:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6103:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6102:30:26"
            }
          },
          {
            "id": 44278,
            "nodeType": "EventDefinition",
            "src": "6190:174:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "53252ee3279c2392363c0838074d9eac3bfd6f8bc86560c9b25faf98de03da83",
            "name": "ClubCPG__Mint",
            "nameLocation": "6196:13:26",
            "parameters": {
              "id": 44277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44268,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6235:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44278,
                  "src": "6219:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6219:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44270,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6265:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44278,
                  "src": "6249:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6249:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44272,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "totalPrice",
                  "nameLocation": "6293:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44278,
                  "src": "6277:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44274,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "6319:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44278,
                  "src": "6313:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 44273,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6313:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44276,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentIndex",
                  "nameLocation": "6345:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44278,
                  "src": "6337:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6337:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6209:154:26"
            }
          },
          {
            "id": 44282,
            "nodeType": "EventDefinition",
            "src": "6409:40:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ed5ac4ce213815379382ba3b91d14aba998ce2e5da855f9906831dc1824757e3",
            "name": "ClubCPG__SetNewUri",
            "nameLocation": "6415:18:26",
            "parameters": {
              "id": 44281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44280,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newUri",
                  "nameLocation": "6441:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44282,
                  "src": "6434:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44279,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6434:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6433:15:26"
            }
          },
          {
            "id": 44284,
            "nodeType": "ErrorDefinition",
            "src": "6737:39:26",
            "nodes": [],
            "errorSelector": "b52aecda",
            "name": "ClubCPG__ShouldBeAValidAddress",
            "nameLocation": "6743:30:26",
            "parameters": {
              "id": 44283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6773:2:26"
            }
          },
          {
            "id": 44286,
            "nodeType": "ErrorDefinition",
            "src": "6834:40:26",
            "nodes": [],
            "errorSelector": "bf0104e7",
            "name": "ClubCPG__ShouldBeAValidQuantity",
            "nameLocation": "6840:31:26",
            "parameters": {
              "id": 44285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6871:2:26"
            }
          },
          {
            "id": 44288,
            "nodeType": "ErrorDefinition",
            "src": "7001:52:26",
            "nodes": [],
            "errorSelector": "6d1484c7",
            "name": "ClubCPG__MaxSupplyReachedOrTooMuchNftsAsked",
            "nameLocation": "7007:43:26",
            "parameters": {
              "id": 44287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7050:2:26"
            }
          },
          {
            "id": 44290,
            "nodeType": "ErrorDefinition",
            "src": "7140:41:26",
            "nodes": [],
            "errorSelector": "092d704c",
            "name": "ClubCPG__CannotComputeTotalPrice",
            "nameLocation": "7146:32:26",
            "parameters": {
              "id": 44289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7178:2:26"
            }
          },
          {
            "id": 44292,
            "nodeType": "ErrorDefinition",
            "src": "7267:38:26",
            "nodes": [],
            "errorSelector": "67f4da77",
            "name": "ClubCPG__NotEnoughUSDCAllowed",
            "nameLocation": "7273:29:26",
            "parameters": {
              "id": 44291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7302:2:26"
            }
          },
          {
            "id": 44294,
            "nodeType": "ErrorDefinition",
            "src": "7388:40:26",
            "nodes": [],
            "errorSelector": "0ce83531",
            "name": "ClubCPG__NotEnoughUSDCInBalance",
            "nameLocation": "7394:31:26",
            "parameters": {
              "id": 44293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7425:2:26"
            }
          },
          {
            "id": 44296,
            "nodeType": "ErrorDefinition",
            "src": "7519:46:26",
            "nodes": [],
            "errorSelector": "b1b9002c",
            "name": "ClubCPG__CannotTransferUsdcToContract",
            "nameLocation": "7525:37:26",
            "parameters": {
              "id": 44295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7562:2:26"
            }
          },
          {
            "id": 44298,
            "nodeType": "ErrorDefinition",
            "src": "7672:52:26",
            "nodes": [],
            "errorSelector": "0c0035a6",
            "name": "ClubCPG__CannotTransferUsdcToReceiptAddress",
            "nameLocation": "7678:43:26",
            "parameters": {
              "id": 44297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7721:2:26"
            }
          },
          {
            "id": 44300,
            "nodeType": "ErrorDefinition",
            "src": "7858:54:26",
            "nodes": [],
            "errorSelector": "94e449b0",
            "name": "ClubCPG__MaxNftMintedReachedForReceiptAddress",
            "nameLocation": "7864:45:26",
            "parameters": {
              "id": 44299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7909:2:26"
            }
          },
          {
            "id": 44302,
            "nodeType": "ErrorDefinition",
            "src": "8017:48:26",
            "nodes": [],
            "errorSelector": "8d9ecaad",
            "name": "ClubCPG__MaxNftReachedForReceiptAddress",
            "nameLocation": "8023:39:26",
            "parameters": {
              "id": 44301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8062:2:26"
            }
          },
          {
            "id": 44304,
            "nodeType": "ErrorDefinition",
            "src": "8222:61:26",
            "nodes": [],
            "errorSelector": "c41c5b5a",
            "name": "ClubCPG__MaxPartnershipMintReachedOrTooMuchNftsAsked",
            "nameLocation": "8228:52:26",
            "parameters": {
              "id": 44303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8280:2:26"
            }
          },
          {
            "id": 44306,
            "nodeType": "ErrorDefinition",
            "src": "8385:65:26",
            "nodes": [],
            "errorSelector": "2746d9fe",
            "name": "ClubCPG__CannotSetMaxSupplyBelowCurrentNumberOfNftMinted",
            "nameLocation": "8391:56:26",
            "parameters": {
              "id": 44305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8447:2:26"
            }
          },
          {
            "id": 44308,
            "nodeType": "ErrorDefinition",
            "src": "8549:48:26",
            "nodes": [],
            "errorSelector": "1ece787c",
            "name": "ClubCPG__CannotSetMaxSupplyToSameAmount",
            "nameLocation": "8555:39:26",
            "parameters": {
              "id": 44307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8594:2:26"
            }
          },
          {
            "id": 44310,
            "nodeType": "ErrorDefinition",
            "src": "8674:39:26",
            "nodes": [],
            "errorSelector": "bb8efbf9",
            "name": "ClubCPG__CannotSetUriToSameUri",
            "nameLocation": "8680:30:26",
            "parameters": {
              "id": 44309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8710:2:26"
            }
          },
          {
            "id": 44312,
            "nodeType": "ErrorDefinition",
            "src": "8794:43:26",
            "nodes": [],
            "errorSelector": "b9f534f2",
            "name": "ClubCPG__CannotSetPriceToSamePrice",
            "nameLocation": "8800:34:26",
            "parameters": {
              "id": 44311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8834:2:26"
            }
          },
          {
            "id": 44360,
            "nodeType": "FunctionDefinition",
            "src": "9064:427:26",
            "nodes": [],
            "body": {
              "id": 44359,
              "nodeType": "Block",
              "src": "9322:169:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44337,
                      "name": "s_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44241,
                      "src": "9332:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44338,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44318,
                      "src": "9340:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9332:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 44340,
                  "nodeType": "ExpressionStatement",
                  "src": "9332:12:26"
                },
                {
                  "expression": {
                    "id": 44345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44341,
                      "name": "i_usdcAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44235,
                      "src": "9354:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42994",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44343,
                          "name": "_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44326,
                          "src": "9377:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44342,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42994,
                        "src": "9370:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$42994_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 44344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9370:20:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42994",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "9354:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42994",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 44346,
                  "nodeType": "ExpressionStatement",
                  "src": "9354:36:26"
                },
                {
                  "expression": {
                    "id": 44349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44347,
                      "name": "s_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44237,
                      "src": "9400:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44348,
                      "name": "_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44322,
                      "src": "9414:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9400:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44350,
                  "nodeType": "ExpressionStatement",
                  "src": "9400:24:26"
                },
                {
                  "expression": {
                    "id": 44353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44351,
                      "name": "s_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44239,
                      "src": "9434:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44352,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44324,
                      "src": "9444:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9434:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44354,
                  "nodeType": "ExpressionStatement",
                  "src": "9434:16:26"
                },
                {
                  "expression": {
                    "id": 44357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44355,
                      "name": "s_maxWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44243,
                      "src": "9460:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44356,
                      "name": "_maxWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44320,
                      "src": "9474:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "9460:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44358,
                  "nodeType": "ExpressionStatement",
                  "src": "9460:24:26"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 44329,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44314,
                    "src": "9286:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 44330,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44316,
                    "src": "9293:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 44331,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44328,
                  "name": "ERC721A",
                  "nameLocations": ["9278:7:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "9278:7:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "9278:23:26"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 44333,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "9310:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 44334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9314:6:26",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "9310:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 44335,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44332,
                  "name": "Ownable",
                  "nameLocations": ["9302:7:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42916,
                  "src": "9302:7:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "9302:19:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44314,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9099:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9085:19:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9085:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44316,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "9128:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9114:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44315,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9114:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44318,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "9159:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9145:18:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9145:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44320,
                  "mutability": "mutable",
                  "name": "_maxWallet",
                  "nameLocation": "9179:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9173:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 44319,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9173:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44322,
                  "mutability": "mutable",
                  "name": "_maxSupply",
                  "nameLocation": "9207:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9199:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9199:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44324,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "9235:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9227:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9227:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44326,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "9259:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44360,
                  "src": "9251:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9251:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9075:202:26"
            },
            "returnParameters": {
              "id": 44336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9322:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44369,
            "nodeType": "FunctionDefinition",
            "src": "9861:90:26",
            "nodes": [],
            "body": {
              "id": 44368,
              "nodeType": "Block",
              "src": "9920:31:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44366,
                    "name": "s_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44239,
                    "src": "9937:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44365,
                  "id": 44367,
                  "nodeType": "Return",
                  "src": "9930:14:26"
                }
              ]
            },
            "documentation": {
              "id": 44361,
              "nodeType": "StructuredDocumentation",
              "src": "9718:138:26",
              "text": " @notice Get the current price to buy one nft\n @dev Return the current price to buy one nft\n @return s_price"
            },
            "functionSelector": "eb91d37e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPrice",
            "nameLocation": "9870:15:26",
            "parameters": {
              "id": 44362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9885:2:26"
            },
            "returnParameters": {
              "id": 44365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44369,
                  "src": "9911:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9911:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9910:9:26"
            },
            "scope": 44726,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44393,
            "nodeType": "FunctionDefinition",
            "src": "10274:218:26",
            "nodes": [],
            "body": {
              "id": 44392,
              "nodeType": "Block",
              "src": "10330:162:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44377,
                      "name": "_newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44372,
                      "src": "10344:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 44378,
                      "name": "s_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44239,
                      "src": "10357:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10344:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44383,
                  "nodeType": "IfStatement",
                  "src": "10340:69:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44380,
                        "name": "ClubCPG__CannotSetPriceToSamePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44312,
                        "src": "10373:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10373:36:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44382,
                    "nodeType": "RevertStatement",
                    "src": "10366:43:26"
                  }
                },
                {
                  "expression": {
                    "id": 44386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44384,
                      "name": "s_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44239,
                      "src": "10419:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44385,
                      "name": "_newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44372,
                      "src": "10429:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10419:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44387,
                  "nodeType": "ExpressionStatement",
                  "src": "10419:19:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44389,
                        "name": "_newPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44372,
                        "src": "10475:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44388,
                      "name": "ClubCPG__SetNewPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44262,
                      "src": "10454:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 44390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10454:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44391,
                  "nodeType": "EmitStatement",
                  "src": "10449:36:26"
                }
              ]
            },
            "documentation": {
              "id": 44370,
              "nodeType": "StructuredDocumentation",
              "src": "9957:312:26",
              "text": " @notice Set the current price to buy one nft\n @dev Set the current price to buy one nft. Only the current `owner` can call this function\n @param _newPrice The new price in USDC. USDC have 6 decimals\n @custom:revert Please refer to the corresponding custom error documentation"
            },
            "functionSelector": "91b7f5ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44374,
                  "name": "onlyOwner",
                  "nameLocations": ["10320:9:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42827,
                  "src": "10320:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "10320:9:26"
              }
            ],
            "name": "setPrice",
            "nameLocation": "10283:8:26",
            "parameters": {
              "id": 44373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44372,
                  "mutability": "mutable",
                  "name": "_newPrice",
                  "nameLocation": "10300:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44393,
                  "src": "10292:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10292:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10291:19:26"
            },
            "returnParameters": {
              "id": 44376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10330:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44402,
            "nodeType": "FunctionDefinition",
            "src": "10874:98:26",
            "nodes": [],
            "body": {
              "id": 44401,
              "nodeType": "Block",
              "src": "10937:35:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44399,
                    "name": "s_maxSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44237,
                    "src": "10954:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44398,
                  "id": 44400,
                  "nodeType": "Return",
                  "src": "10947:18:26"
                }
              ]
            },
            "documentation": {
              "id": 44394,
              "nodeType": "StructuredDocumentation",
              "src": "10719:150:26",
              "text": " @notice Get the maximum number of membership NFT\n @dev Return the maximum supply of the collection\n @return s_maxSupply"
            },
            "functionSelector": "83b40da2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentMaxSupply",
            "nameLocation": "10883:19:26",
            "parameters": {
              "id": 44395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10902:2:26"
            },
            "returnParameters": {
              "id": 44398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44397,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44402,
                  "src": "10928:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10928:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10927:9:26"
            },
            "scope": 44726,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44434,
            "nodeType": "FunctionDefinition",
            "src": "11309:390:26",
            "nodes": [],
            "body": {
              "id": 44433,
              "nodeType": "Block",
              "src": "11373:326:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44410,
                      "name": "_newMaxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44405,
                      "src": "11387:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44411,
                        "name": "_totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "11403:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 44412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11403:14:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11387:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44417,
                  "nodeType": "IfStatement",
                  "src": "11383:113:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44414,
                        "name": "ClubCPG__CannotSetMaxSupplyBelowCurrentNumberOfNftMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44306,
                        "src": "11438:56:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11438:58:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44416,
                    "nodeType": "RevertStatement",
                    "src": "11431:65:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44418,
                      "name": "_newMaxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44405,
                      "src": "11510:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 44419,
                      "name": "s_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44237,
                      "src": "11527:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11510:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44424,
                  "nodeType": "IfStatement",
                  "src": "11506:94:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44421,
                        "name": "ClubCPG__CannotSetMaxSupplyToSameAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44308,
                        "src": "11559:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11559:41:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44423,
                    "nodeType": "RevertStatement",
                    "src": "11552:48:26"
                  }
                },
                {
                  "expression": {
                    "id": 44427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44425,
                      "name": "s_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44237,
                      "src": "11610:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44426,
                      "name": "_newMaxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44405,
                      "src": "11624:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11610:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44428,
                  "nodeType": "ExpressionStatement",
                  "src": "11610:27:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44430,
                        "name": "_newMaxSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44405,
                        "src": "11678:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44429,
                      "name": "ClubCPG__SetNewMaxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44266,
                      "src": "11653:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 44431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11653:39:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44432,
                  "nodeType": "EmitStatement",
                  "src": "11648:44:26"
                }
              ]
            },
            "documentation": {
              "id": 44403,
              "nodeType": "StructuredDocumentation",
              "src": "10978:326:26",
              "text": " @notice Set the maximum number of membership NFT\n @dev Set the maximum supply of the collection. Only the current `owner` can call this function\n @param _newMaxSupply The new maximum supply of the NFT collection.\n @custom:revert Please refer to the corresponding custom error documentation"
            },
            "functionSelector": "6f8b44b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44407,
                  "name": "onlyOwner",
                  "nameLocations": ["11363:9:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42827,
                  "src": "11363:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "11363:9:26"
              }
            ],
            "name": "setMaxSupply",
            "nameLocation": "11318:12:26",
            "parameters": {
              "id": 44406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44405,
                  "mutability": "mutable",
                  "name": "_newMaxSupply",
                  "nameLocation": "11339:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44434,
                  "src": "11331:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11331:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11330:23:26"
            },
            "returnParameters": {
              "id": 44409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11373:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44590,
            "nodeType": "FunctionDefinition",
            "src": "12390:1768:26",
            "nodes": [],
            "body": {
              "id": 44589,
              "nodeType": "Block",
              "src": "12456:1702:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44444,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44437,
                      "src": "12470:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 44447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12485:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 44446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12477:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12477:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12477:10:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12470:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44453,
                  "nodeType": "IfStatement",
                  "src": "12466:62:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44450,
                        "name": "ClubCPG__ShouldBeAValidAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44284,
                        "src": "12496:30:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12496:32:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44452,
                    "nodeType": "RevertStatement",
                    "src": "12489:39:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44454,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44437,
                      "src": "12542:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
                          "id": 44457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12557:42:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x000000000000000000000000000000000000dEaD"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12549:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12549:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12549:51:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12542:58:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44463,
                  "nodeType": "IfStatement",
                  "src": "12538:115:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44460,
                        "name": "ClubCPG__ShouldBeAValidAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44284,
                        "src": "12621:30:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12621:32:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44462,
                    "nodeType": "RevertStatement",
                    "src": "12614:39:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 44466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44464,
                      "name": "_quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44439,
                      "src": "12667:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 44465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12680:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12667:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44470,
                  "nodeType": "IfStatement",
                  "src": "12663:60:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44467,
                        "name": "ClubCPG__ShouldBeAValidQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44286,
                        "src": "12690:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12690:33:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44469,
                    "nodeType": "RevertStatement",
                    "src": "12683:40:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 44474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44471,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44439,
                        "src": "12737:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 44472,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "12749:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 44473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12749:14:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12737:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 44475,
                      "name": "s_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44237,
                      "src": "12766:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12737:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44480,
                  "nodeType": "IfStatement",
                  "src": "12733:110:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44477,
                        "name": "ClubCPG__MaxSupplyReachedOrTooMuchNftsAsked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44288,
                        "src": "12798:43:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12798:45:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44479,
                    "nodeType": "RevertStatement",
                    "src": "12791:52:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 44487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 44485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44481,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44439,
                        "src": "12870:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 44482,
                          "name": "s_addressToNumberOfTokenReceivedFromMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44258,
                          "src": "12882:40:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                            "typeString": "mapping(address => uint8)"
                          }
                        },
                        "id": 44484,
                        "indexExpression": {
                          "id": 44483,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44437,
                          "src": "12923:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12882:45:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "12870:57:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 44486,
                      "name": "s_maxWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44243,
                      "src": "12942:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12870:83:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44491,
                  "nodeType": "IfStatement",
                  "src": "12853:165:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44488,
                        "name": "ClubCPG__MaxNftMintedReachedForReceiptAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44300,
                        "src": "12971:45:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12971:47:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44490,
                    "nodeType": "RevertStatement",
                    "src": "12964:54:26"
                  }
                },
                {
                  "assignments": [44493, 44495],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44493,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "13156:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44589,
                      "src": "13151:11:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44492,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13151:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44495,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "13172:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44589,
                      "src": "13164:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13164:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44501,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44498,
                        "name": "s_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44239,
                        "src": "13198:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44499,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44439,
                        "src": "13207:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                      ],
                      "expression": {
                        "id": 44496,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44147,
                        "src": "13186:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$44147_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 44497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13191:6:26",
                      "memberName": "tryMul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43206,
                      "src": "13186:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 44500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13186:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13150:67:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 44504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44502,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44493,
                      "src": "13231:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 44503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13241:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13231:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44508,
                  "nodeType": "IfStatement",
                  "src": "13227:62:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44505,
                        "name": "ClubCPG__CannotComputeTotalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44290,
                        "src": "13255:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13255:34:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44507,
                    "nodeType": "RevertStatement",
                    "src": "13248:41:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 44511,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13327:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13331:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13327:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 44515,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13347:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClubCPG_$44726",
                                "typeString": "contract ClubCPG"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ClubCPG_$44726",
                                "typeString": "contract ClubCPG"
                              }
                            ],
                            "id": 44514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13339:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44513,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13339:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13339:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 44509,
                          "name": "i_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44235,
                          "src": "13303:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$42994",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 44510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13317:9:26",
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42971,
                        "src": "13303:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 44517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13303:50:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 44518,
                      "name": "totalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44495,
                      "src": "13356:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13303:63:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44523,
                  "nodeType": "IfStatement",
                  "src": "13299:119:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44520,
                        "name": "ClubCPG__NotEnoughUSDCAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44292,
                        "src": "13387:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13387:31:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44522,
                    "nodeType": "RevertStatement",
                    "src": "13380:38:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 44526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13456:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13460:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13456:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 44524,
                          "name": "i_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44235,
                          "src": "13432:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$42994",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 44525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13446:9:26",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42951,
                        "src": "13432:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 44528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13432:35:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 44529,
                      "name": "totalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44495,
                      "src": "13470:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13432:48:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44534,
                  "nodeType": "IfStatement",
                  "src": "13428:106:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44531,
                        "name": "ClubCPG__NotEnoughUSDCInBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44294,
                        "src": "13501:31:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13501:33:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44533,
                    "nodeType": "RevertStatement",
                    "src": "13494:40:26"
                  }
                },
                {
                  "expression": {
                    "id": 44539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44535,
                        "name": "s_addressToNumberOfTokenReceivedFromMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44258,
                        "src": "13545:40:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 44537,
                      "indexExpression": {
                        "id": 44536,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44437,
                        "src": "13586:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13545:45:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 44538,
                      "name": "_quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44439,
                      "src": "13594:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13545:58:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 44540,
                  "nodeType": "ExpressionStatement",
                  "src": "13545:58:26"
                },
                {
                  "assignments": [44542],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44542,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "13619:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44589,
                      "src": "13614:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44541,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13614:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44553,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44545,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13669:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13673:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13669:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44549,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13701:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClubCPG_$44726",
                              "typeString": "contract ClubCPG"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClubCPG_$44726",
                              "typeString": "contract ClubCPG"
                            }
                          ],
                          "id": 44548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13693:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44547,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13693:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13693:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44551,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44495,
                        "src": "13720:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44543,
                        "name": "i_usdcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44235,
                        "src": "13629:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42994",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 44544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13643:12:26",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42993,
                      "src": "13629:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13629:111:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13614:126:26"
                },
                {
                  "condition": {
                    "id": 44555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "13754:8:26",
                    "subExpression": {
                      "id": 44554,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44542,
                      "src": "13755:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44559,
                  "nodeType": "IfStatement",
                  "src": "13750:60:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44556,
                        "name": "ClubCPG__CannotTransferUsdcToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44296,
                        "src": "13771:37:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13771:39:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44558,
                    "nodeType": "RevertStatement",
                    "src": "13764:46:26"
                  }
                },
                {
                  "assignments": [44561],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44561,
                      "mutability": "mutable",
                      "name": "success2",
                      "nameLocation": "13826:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44589,
                      "src": "13821:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44560,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13821:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44567,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44564,
                        "name": "RECEIPT_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44254,
                        "src": "13860:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44565,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44495,
                        "src": "13877:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44562,
                        "name": "i_usdcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44235,
                        "src": "13837:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42994",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 44563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13851:8:26",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42961,
                      "src": "13837:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13837:51:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13821:67:26"
                },
                {
                  "condition": {
                    "id": 44569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "13902:9:26",
                    "subExpression": {
                      "id": 44568,
                      "name": "success2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44561,
                      "src": "13903:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44573,
                  "nodeType": "IfStatement",
                  "src": "13898:67:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44570,
                        "name": "ClubCPG__CannotTransferUsdcToReceiptAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44298,
                        "src": "13920:43:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13920:45:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44572,
                    "nodeType": "RevertStatement",
                    "src": "13913:52:26"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44575,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44437,
                        "src": "13981:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44576,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44439,
                        "src": "13986:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                      ],
                      "id": 44574,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1158,
                      "src": "13975:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13975:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44578,
                  "nodeType": "ExpressionStatement",
                  "src": "13975:21:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14039:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14043:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14039:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44582,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44437,
                        "src": "14063:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44583,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44495,
                        "src": "14080:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44584,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44439,
                        "src": "14104:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 44585,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "14127:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 44586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14127:14:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        { "typeIdentifier": "t_uint8", "typeString": "uint8" },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44579,
                      "name": "ClubCPG__Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44278,
                      "src": "14012:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint8,uint256)"
                      }
                    },
                    "id": 44587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14012:139:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44588,
                  "nodeType": "EmitStatement",
                  "src": "14007:144:26"
                }
              ]
            },
            "documentation": {
              "id": 44435,
              "nodeType": "StructuredDocumentation",
              "src": "11926:459:26",
              "text": " @notice Allow you to mint the membership NFT\n @dev Mint and transfer token to the `_to` address.\n Implement the nonReetrant modifier form OZ to avoid reentrancy attack\n Transfer usdc to the receipt address `RECEIPT_ADDRESS`\n @param _to The address that will receive the NFT\n @param _quantity The number of NFT that will be mint\n @custom:revert Please refer to the corresponding custom error documentation"
            },
            "functionSelector": "691562a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44442,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44441,
                  "name": "nonReentrant",
                  "nameLocations": ["12443:12:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43057,
                  "src": "12443:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "12443:12:26"
              }
            ],
            "name": "mint",
            "nameLocation": "12399:4:26",
            "parameters": {
              "id": 44440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44437,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "12412:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44590,
                  "src": "12404:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12404:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44439,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "12423:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44590,
                  "src": "12417:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 44438,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12417:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12403:30:26"
            },
            "returnParameters": {
              "id": 44443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12456:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44638,
            "nodeType": "FunctionDefinition",
            "src": "14508:622:26",
            "nodes": [],
            "body": {
              "id": 44637,
              "nodeType": "Block",
              "src": "14569:561:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 44601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44598,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44593,
                        "src": "14583:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 44599,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "14595:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 44600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14595:14:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14583:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 44602,
                      "name": "s_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44237,
                      "src": "14612:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14583:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44607,
                  "nodeType": "IfStatement",
                  "src": "14579:110:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44604,
                        "name": "ClubCPG__MaxSupplyReachedOrTooMuchNftsAsked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44288,
                        "src": "14644:43:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14644:45:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44606,
                    "nodeType": "RevertStatement",
                    "src": "14637:52:26"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 44612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 44610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44608,
                        "name": "s_mintPartnershipCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44245,
                        "src": "14703:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 44609,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44593,
                        "src": "14728:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "14703:34:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 44611,
                      "name": "MAX_PARTNERSHIP_MINT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "14740:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14703:57:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44616,
                  "nodeType": "IfStatement",
                  "src": "14699:136:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44613,
                        "name": "ClubCPG__MaxPartnershipMintReachedOrTooMuchNftsAsked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44304,
                        "src": "14781:52:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14781:54:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44615,
                    "nodeType": "RevertStatement",
                    "src": "14774:61:26"
                  }
                },
                {
                  "id": 44621,
                  "nodeType": "UncheckedBlock",
                  "src": "14845:70:26",
                  "statements": [
                    {
                      "expression": {
                        "id": 44619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 44617,
                          "name": "s_mintPartnershipCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44245,
                          "src": "14869:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 44618,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44593,
                          "src": "14895:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "14869:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 44620,
                      "nodeType": "ExpressionStatement",
                      "src": "14869:35:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44623,
                        "name": "PARTNERSHIP_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44251,
                        "src": "14930:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44624,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44593,
                        "src": "14951:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                      ],
                      "id": 44622,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1158,
                      "src": "14924:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14924:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44626,
                  "nodeType": "ExpressionStatement",
                  "src": "14924:37:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15004:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15008:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15004:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44630,
                        "name": "PARTNERSHIP_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44251,
                        "src": "15028:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15061:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 44632,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44593,
                        "src": "15076:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 44633,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "15099:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 44634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15099:14:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        { "typeIdentifier": "t_uint8", "typeString": "uint8" },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44627,
                      "name": "ClubCPG__Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44278,
                      "src": "14977:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint8,uint256)"
                      }
                    },
                    "id": 44635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14977:146:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44636,
                  "nodeType": "EmitStatement",
                  "src": "14972:151:26"
                }
              ]
            },
            "documentation": {
              "id": 44591,
              "nodeType": "StructuredDocumentation",
              "src": "14164:339:26",
              "text": " @notice Allow the owner of the contract to mint the membership NFT dedicated to the partner\n @dev Mint NFT for partnership. Only the current `owner` can call this function\n @param _quantity The number of NFT that will be mint\n @custom:revert Please refer to the corresponding custom error documentation"
            },
            "functionSelector": "945711b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44595,
                  "name": "onlyOwner",
                  "nameLocations": ["14559:9:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42827,
                  "src": "14559:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "14559:9:26"
              }
            ],
            "name": "mintPartnership",
            "nameLocation": "14517:15:26",
            "parameters": {
              "id": 44594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44593,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "14539:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44638,
                  "src": "14533:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 44592,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14533:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14532:17:26"
            },
            "returnParameters": {
              "id": 44597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14569:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44663,
            "nodeType": "FunctionDefinition",
            "src": "15563:274:26",
            "nodes": [],
            "body": {
              "id": 44662,
              "nodeType": "Block",
              "src": "15716:121:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 44655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 44651,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44647,
                        "src": "15730:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 44653,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44643,
                            "src": "15751:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44652,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "15741:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 44654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15741:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15730:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 44656,
                      "name": "s_maxWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44243,
                      "src": "15757:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15730:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44661,
                  "nodeType": "IfStatement",
                  "src": "15726:104:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44658,
                        "name": "ClubCPG__MaxNftReachedForReceiptAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44302,
                        "src": "15789:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15789:41:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44660,
                    "nodeType": "RevertStatement",
                    "src": "15782:48:26"
                  }
                }
              ]
            },
            "baseFunctions": [994],
            "documentation": {
              "id": 44639,
              "nodeType": "StructuredDocumentation",
              "src": "15357:201:26",
              "text": " @dev Overrinding the ERC721A _beforeTokenTransfers function. Add a check\n @custom:revert Please refer to the corresponding custom error documentation\n @inheritdoc ERC721A"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "15572:21:26",
            "overrides": {
              "id": 44649,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15707:8:26"
            },
            "parameters": {
              "id": 44648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44641,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15611:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44663,
                  "src": "15603:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15603:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44643,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15633:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44663,
                  "src": "15625:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15625:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44645,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "15653:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44663,
                  "src": "15645:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15645:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44647,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "15683:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44663,
                  "src": "15675:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15675:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15593:104:26"
            },
            "returnParameters": {
              "id": 44650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15716:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44697,
            "nodeType": "FunctionDefinition",
            "src": "16394:296:26",
            "nodes": [],
            "body": {
              "id": 44696,
              "nodeType": "Block",
              "src": "16452:238:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 44683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44674,
                              "name": "_newUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44666,
                              "src": "16506:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 44672,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "16489:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 44673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16493:12:26",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "16489:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 44675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16489:25:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 44671,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "16479:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 44676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16479:36:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44680,
                              "name": "s_uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44241,
                              "src": "16558:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "id": 44678,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "16541:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 44679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16545:12:26",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "16541:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 44681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16541:23:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 44677,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "16531:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 44682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16531:34:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "16479:86:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44687,
                  "nodeType": "IfStatement",
                  "src": "16462:153:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44684,
                        "name": "ClubCPG__CannotSetUriToSameUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44310,
                        "src": "16583:30:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16583:32:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44686,
                    "nodeType": "RevertStatement",
                    "src": "16576:39:26"
                  }
                },
                {
                  "expression": {
                    "id": 44690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44688,
                      "name": "s_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44241,
                      "src": "16625:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44689,
                      "name": "_newUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44666,
                      "src": "16633:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16625:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 44691,
                  "nodeType": "ExpressionStatement",
                  "src": "16625:15:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44693,
                        "name": "_newUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44666,
                        "src": "16675:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 44692,
                      "name": "ClubCPG__SetNewUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44282,
                      "src": "16656:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 44694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16656:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44695,
                  "nodeType": "EmitStatement",
                  "src": "16651:32:26"
                }
              ]
            },
            "documentation": {
              "id": 44664,
              "nodeType": "StructuredDocumentation",
              "src": "16064:325:26",
              "text": " @notice Allow the owner of the contract to set the metadata for the membership NFT\n @dev Set URI of the NFT. Only the current `owner` can call this function\n @param _newUri The new URI that point to the metadata\n @custom:revert Please refer to the corresponding custom error documentation"
            },
            "functionSelector": "9b642de1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44669,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44668,
                  "name": "onlyOwner",
                  "nameLocations": ["16442:9:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42827,
                  "src": "16442:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "16442:9:26"
              }
            ],
            "name": "setUri",
            "nameLocation": "16403:6:26",
            "parameters": {
              "id": 44667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44666,
                  "mutability": "mutable",
                  "name": "_newUri",
                  "nameLocation": "16424:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44697,
                  "src": "16410:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16410:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16409:23:26"
            },
            "returnParameters": {
              "id": 44670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16452:0:26"
            },
            "scope": 44726,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44725,
            "nodeType": "FunctionDefinition",
            "src": "16993:246:26",
            "nodes": [],
            "body": {
              "id": 44724,
              "nodeType": "Block",
              "src": "17114:125:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 44711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "17128:17:26",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 44709,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44700,
                          "src": "17137:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 44708,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "17129:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 44710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17129:16:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44715,
                  "nodeType": "IfStatement",
                  "src": "17124:59:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44712,
                        "name": "URIQueryForNonexistentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1658,
                        "src": "17154:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17154:29:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 44714,
                    "nodeType": "RevertStatement",
                    "src": "17147:36:26"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44720,
                            "name": "s_uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44241,
                            "src": "17225:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 44718,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17208:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17212:12:26",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "17208:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17208:23:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "17201:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 44716,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "17201:6:26",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17201:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 44707,
                  "id": 44723,
                  "nodeType": "Return",
                  "src": "17194:38:26"
                }
              ]
            },
            "baseFunctions": [395, 1816],
            "documentation": {
              "id": 44698,
              "nodeType": "StructuredDocumentation",
              "src": "16696:292:26",
              "text": " @notice Get the Metadata for a give NFT\n @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n @param tokenId The NFT Id to check metadata\n @return s_uri\n @custom:revert Please refer to the corresponding custom error documentation"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "17002:8:26",
            "overrides": {
              "id": 44704,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 44702,
                  "name": "ERC721A",
                  "nameLocations": ["17071:7:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "17071:7:26"
                },
                {
                  "id": 44703,
                  "name": "IERC721A",
                  "nameLocations": ["17080:8:26"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1828,
                  "src": "17080:8:26"
                }
              ],
              "src": "17062:27:26"
            },
            "parameters": {
              "id": 44701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44700,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17028:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44725,
                  "src": "17020:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17020:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17010:31:26"
            },
            "returnParameters": {
              "id": 44707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44706,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44725,
                  "src": "17099:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44705,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17099:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17098:15:26"
            },
            "scope": 44726,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44227,
              "name": "ERC721AQueryable",
              "nameLocations": ["3687:16:26"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2203,
              "src": "3687:16:26"
            },
            "id": 44228,
            "nodeType": "InheritanceSpecifier",
            "src": "3687:16:26"
          },
          {
            "baseName": {
              "id": 44229,
              "name": "Ownable",
              "nameLocations": ["3705:7:26"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42916,
              "src": "3705:7:26"
            },
            "id": 44230,
            "nodeType": "InheritanceSpecifier",
            "src": "3705:7:26"
          },
          {
            "baseName": {
              "id": 44231,
              "name": "ReentrancyGuard",
              "nameLocations": ["3714:15:26"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43093,
              "src": "3714:15:26"
            },
            "id": 44232,
            "nodeType": "InheritanceSpecifier",
            "src": "3714:15:26"
          }
        ],
        "canonicalName": "ClubCPG",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44226,
          "nodeType": "StructuredDocumentation",
          "src": "3360:307:26",
          "text": "@title Membership NFT of Champagne Philippe Gonet Club\n @notice You can use this contract to mint membership NFT and join the Champagne Philippe Gonet Club. https://www.champagne-philippe-gonet.com/homepage/\n @dev ERC721A USDC mint based contract\n @custom:thanks Thanks to our partner Metalyde"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44726, 43093, 42916, 43024, 2203, 2255, 1622, 1828
        ],
        "name": "ClubCPG",
        "nameLocation": "3676:7:26",
        "scope": 44727,
        "usedErrors": [
          1628, 1631, 1634, 1637, 1640, 1643, 1646, 1649, 1652, 1655, 1658,
          1661, 1664, 2212, 42782, 42787, 43038, 44284, 44286, 44288, 44290,
          44292, 44294, 44296, 44298, 44300, 44302, 44304, 44306, 44308, 44310,
          44312
        ],
        "usedEvents": [
          1696, 1705, 1714, 1827, 42793, 44262, 44266, 44278, 44282
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 26
}
